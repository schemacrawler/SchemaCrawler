

System Information
========================================================================

generated by                              SchemaCrawler 15.01.03        
generated on                              2018-08-13 20:05:17           



Tables
========================================================================



BOOKS.AUTHORS                                                    [table]
------------------------------------------------------------------------
Contact details for book authors
  ID                                NUMBER(38, 0) NOT NULL      
  FIRSTNAME                         VARCHAR2(20) NOT NULL       
  LASTNAME                          VARCHAR2(20) NOT NULL       
  ADDRESS1                          VARCHAR2(255)               
  ADDRESS2                          VARCHAR2(255)               
  CITY                              VARCHAR2(50)                
  STATE                             VARCHAR2(2)                 
  POSTALCODE                        VARCHAR2(10)                
  COUNTRY                           VARCHAR2(50)                
  "SYS_NC00010$"                    RAW                         
                                    hidden                      
                                    generated                   

Primary Key

PK_AUTHORS                                                 [primary key]
  ID                                ascending                   
ALTER TABLE "BOOKS"."AUTHORS" ADD CONSTRAINT "PK_AUTHORS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS"  ENABLE;CREATE UNIQUE INDEX "BOOKS"."PK_AUTHORS" ON "BOOKS"."AUTHORS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS" ;

Foreign Keys

Z_FK_AUTHOR         [foreign key, on update cascade, on delete restrict]
  ID <--(0..many) BOOKS.BOOKAUTHORS.AUTHORID                              
ALTER TABLE "BOOKS"."BOOKAUTHORS" ADD CONSTRAINT "Z_FK_AUTHOR" FOREIGN KEY ("AUTHORID")
	  REFERENCES "BOOKS"."AUTHORS" ("ID") ENABLE;

Indexes

IDX_B_AUTHORS                                         [non-unique index]
  LASTNAME                          ascending                   
  FIRSTNAME                         ascending                   
CREATE INDEX "BOOKS"."IDX_B_AUTHORS" ON "BOOKS"."AUTHORS" ("LASTNAME", "FIRSTNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;

IDX_A_AUTHORS                                         [non-unique index]
  CITY                              ascending                   
  "SYS_NC00010$"                    descending                  
  POSTALCODE                        ascending                   
  COUNTRY                           ascending                   
CREATE INDEX "BOOKS"."IDX_A_AUTHORS" ON "BOOKS"."AUTHORS" ("CITY", "STATE" DESC, "POSTALCODE", "COUNTRY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;

Triggers

TRG_AUTHORS                             [trigger, after delete, per row]
BEGIN
  UPDATE Publishers SET Publisher = 'Jacob' WHERE Publisher = 'John';
END;

Table Constraints

CHECK_UPPERCASE_STATE                                 [check constraint]
  STATE                                                         
ALTER TABLE "BOOKS"."AUTHORS" ADD CONSTRAINT "CHECK_UPPERCASE_STATE" CHECK (State=UPPER(State)) ENABLE;

SYS_C0033866                                          [check constraint]
  ID                                                            
ALTER TABLE "BOOKS"."AUTHORS" MODIFY ("ID" NOT NULL ENABLE);

SYS_C0033867                                          [check constraint]
  FIRSTNAME                                                     
ALTER TABLE "BOOKS"."AUTHORS" MODIFY ("FIRSTNAME" NOT NULL ENABLE);

SYS_C0033868                                          [check constraint]
  LASTNAME                                                      
ALTER TABLE "BOOKS"."AUTHORS" MODIFY ("LASTNAME" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "BOOKS"."AUTHORS" 
   (	"ID" NUMBER(*,0), 
	"FIRSTNAME" VARCHAR2(20 BYTE), 
	"LASTNAME" VARCHAR2(20 BYTE), 
	"ADDRESS1" VARCHAR2(255 BYTE), 
	"ADDRESS2" VARCHAR2(255 BYTE), 
	"CITY" VARCHAR2(50 BYTE), 
	"STATE" VARCHAR2(2 BYTE), 
	"POSTALCODE" VARCHAR2(10 BYTE), 
	"COUNTRY" VARCHAR2(50 BYTE) DEFAULT 'USA'
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;



BOOKS.AUTHORSLIST                                                 [view]
------------------------------------------------------------------------
  ID                                NUMBER(38, 0) NOT NULL      
  FIRSTNAME                         VARCHAR2(20) NOT NULL       
  LASTNAME                          VARCHAR2(20) NOT NULL       

Definition
                                                            [definition]
SELECT Id, FirstName, LastName FROM Authors



BOOKS.BOOKAUTHORS                                                [table]
------------------------------------------------------------------------
Relationship between books and their authors, 
along with the latest updated information
  BOOKID                            NUMBER(38, 0) NOT NULL      
  AUTHORID                          NUMBER(38, 0) NOT NULL      
  SOMEDATA                          VARCHAR2(30)                

Foreign Keys

Z_FK_AUTHOR         [foreign key, on update cascade, on delete restrict]
  AUTHORID (0..many)--> BOOKS.AUTHORS.ID                              
ALTER TABLE "BOOKS"."BOOKAUTHORS" ADD CONSTRAINT "Z_FK_AUTHOR" FOREIGN KEY ("AUTHORID")
	  REFERENCES "BOOKS"."AUTHORS" ("ID") ENABLE;

SYS_C0033879        [foreign key, on update cascade, on delete restrict]
  BOOKID (0..many)--> BOOKS.BOOKS.ID                              
ALTER TABLE "BOOKS"."BOOKAUTHORS" ADD FOREIGN KEY ("BOOKID")
	  REFERENCES "BOOKS"."BOOKS" ("ID") ENABLE;

Indexes

UIDX_BOOKAUTHORS                                          [unique index]
  BOOKID                            ascending                   
  AUTHORID                          ascending                   
CREATE UNIQUE INDEX "BOOKS"."UIDX_BOOKAUTHORS" ON "BOOKS"."BOOKAUTHORS" ("BOOKID", "AUTHORID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;

Table Constraints

SYS_C0033877                                          [check constraint]
  BOOKID                                                        
ALTER TABLE "BOOKS"."BOOKAUTHORS" MODIFY ("BOOKID" NOT NULL ENABLE);

SYS_C0033878                                          [check constraint]
  AUTHORID                                                      
ALTER TABLE "BOOKS"."BOOKAUTHORS" MODIFY ("AUTHORID" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "BOOKS"."BOOKAUTHORS" 
   (	"BOOKID" NUMBER(*,0), 
	"AUTHORID" NUMBER(*,0), 
	"SOMEDATA" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;



BOOKS.BOOKS                                                      [table]
------------------------------------------------------------------------
Details for published books
  ID                                NUMBER(38, 0) NOT NULL      
                                    Unique (internal) id for book
  TITLE                             VARCHAR2(255) NOT NULL      
                                    Book title                  
  DESCRIPTION                       VARCHAR2(255)               
                                    Book description
(Usually the blurb from the book jacket or promotional materials)
  PUBLISHERID                       NUMBER(38, 0) NOT NULL      
                                    Foreign key to the book publisher
  PUBLICATIONDATE                   DATE                        
                                    Book publication date       
  PRICE                             FLOAT(126, 0)               
                                    Current price for the book  
  PREVIOUSEDITIONID                 NUMBER(38, 0)               

Primary Key

PK_BOOKS                                                   [primary key]
  ID                                ascending                   
ALTER TABLE "BOOKS"."BOOKS" ADD CONSTRAINT "PK_BOOKS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS"  ENABLE;CREATE UNIQUE INDEX "BOOKS"."PK_BOOKS" ON "BOOKS"."BOOKS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS" ;

Foreign Keys

SYS_C0033879        [foreign key, on update cascade, on delete restrict]
  ID <--(0..many) BOOKS.BOOKAUTHORS.BOOKID                              
ALTER TABLE "BOOKS"."BOOKAUTHORS" ADD FOREIGN KEY ("BOOKID")
	  REFERENCES "BOOKS"."BOOKS" ("ID") ENABLE;

FK_PREVIOUSEDITION  [foreign key, on update cascade, on delete restrict]
  ID <--(0..1) PREVIOUSEDITIONID                                
ALTER TABLE "BOOKS"."BOOKS" ADD CONSTRAINT "FK_PREVIOUSEDITION" FOREIGN KEY ("PREVIOUSEDITIONID")
	  REFERENCES "BOOKS"."BOOKS" ("ID") ENABLE;

Indexes

U_PREVIOUSEDITION                                         [unique index]
  PREVIOUSEDITIONID                 ascending                   
CREATE UNIQUE INDEX "BOOKS"."U_PREVIOUSEDITION" ON "BOOKS"."BOOKS" ("PREVIOUSEDITIONID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS" ;

Table Constraints

U_PREVIOUSEDITION                                    [unique constraint]
  PREVIOUSEDITIONID                                             
ALTER TABLE "BOOKS"."BOOKS" ADD CONSTRAINT "U_PREVIOUSEDITION" UNIQUE ("PREVIOUSEDITIONID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS"  ENABLE;

SYS_C0033871                                          [check constraint]
  ID                                                            
ALTER TABLE "BOOKS"."BOOKS" MODIFY ("ID" NOT NULL ENABLE);

SYS_C0033872                                          [check constraint]
  TITLE                                                         
ALTER TABLE "BOOKS"."BOOKS" MODIFY ("TITLE" NOT NULL ENABLE);

SYS_C0033873                                          [check constraint]
  PUBLISHERID                                                   
ALTER TABLE "BOOKS"."BOOKS" MODIFY ("PUBLISHERID" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "BOOKS"."BOOKS" 
   (	"ID" NUMBER(*,0), 
	"TITLE" VARCHAR2(255 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"PUBLISHERID" NUMBER(*,0), 
	"PUBLICATIONDATE" DATE, 
	"PRICE" FLOAT(126), 
	"PREVIOUSEDITIONID" NUMBER(*,0)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;



BOOKS.COUPONS                                                    [table]
------------------------------------------------------------------------
  ID                                NUMBER(38, 0) NOT NULL      
  DATA                              CLOB                        
  COUPONS                           NUMBER(38, 0)               
  BOOKS                             VARCHAR2(20)                

Primary Key

PK_COUPONS                                                 [primary key]
  ID                                ascending                   
ALTER TABLE "BOOKS"."COUPONS" ADD CONSTRAINT "PK_COUPONS" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS"  ENABLE;CREATE UNIQUE INDEX "BOOKS"."PK_COUPONS" ON "BOOKS"."COUPONS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS" ;

Table Constraints

SYS_C0033862                                          [check constraint]
  ID                                                            
ALTER TABLE "BOOKS"."COUPONS" MODIFY ("ID" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "BOOKS"."COUPONS" 
   (	"ID" NUMBER(*,0), 
	"DATA" CLOB, 
	"COUPONS" NUMBER(*,0), 
	"BOOKS" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" 
 LOB ("DATA") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING ) ;



BOOKS."Global Counts"                                            [table]
------------------------------------------------------------------------
  "Global Count"                    NUMBER(38, 0)               
  "UPDATE"                          VARCHAR2(20)                

Definition
                                                            [definition]
CREATE TABLE "BOOKS"."Global Counts" 
   (	"Global Count" NUMBER(*,0), 
	"UPDATE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;



BOOKS.PUBLISHERS                                                 [table]
------------------------------------------------------------------------
List of book publishers
  ID                                NUMBER(38, 0) NOT NULL      
                                    Unique (internal) id for book publisher
  PUBLISHER                         VARCHAR2(255)               
                                    Name of book publisher      

Primary Key

SYS_C0033865                                               [primary key]
  ID                                ascending                   
ALTER TABLE "BOOKS"."PUBLISHERS" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS"  ENABLE;CREATE UNIQUE INDEX "BOOKS"."SYS_C0033865" ON "BOOKS"."PUBLISHERS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS" ;

Foreign Keys

FK_ΒΙΒΛΊΑ_PUBLISHERS  [foreign key, on update cascade, on delete restrict]
  ID <--(0..many) BOOKS.ΒΙΒΛΊΑ.ΕΚΔΌΤΗΣ                              
ALTER TABLE "BOOKS"."ΒΙΒΛΊΑ" ADD CONSTRAINT "FK_ΒΙΒΛΊΑ_PUBLISHERS" FOREIGN KEY ("ΕΚΔΌΤΗΣ")
	  REFERENCES "BOOKS"."PUBLISHERS" ("ID") ENABLE;

Table Constraints

SYS_C0033864                                          [check constraint]
  ID                                                            
ALTER TABLE "BOOKS"."PUBLISHERS" MODIFY ("ID" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "BOOKS"."PUBLISHERS" 
   (	"ID" NUMBER(*,0), 
	"PUBLISHER" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;



BOOKS.TEMP_AUTHOR_LIST                                           [table]
------------------------------------------------------------------------
  ID                                NUMBER(38, 0) NOT NULL      
  FIRSTNAME                         VARCHAR2(20) NOT NULL       
  LASTNAME                          VARCHAR2(20) NOT NULL       

Primary Key

PK_TMP_AUTHORS                                             [primary key]
  ID                                ascending                   
ALTER TABLE "BOOKS"."TEMP_AUTHOR_LIST" ADD CONSTRAINT "PK_TMP_AUTHORS" PRIMARY KEY ("ID") ENABLE;CREATE UNIQUE INDEX "BOOKS"."PK_TMP_AUTHORS" ON "BOOKS"."TEMP_AUTHOR_LIST" ("ID") ;

Table Constraints

SYS_C0033886                                          [check constraint]
  ID                                                            
ALTER TABLE "BOOKS"."TEMP_AUTHOR_LIST" MODIFY ("ID" NOT NULL ENABLE);

SYS_C0033887                                          [check constraint]
  FIRSTNAME                                                     
ALTER TABLE "BOOKS"."TEMP_AUTHOR_LIST" MODIFY ("FIRSTNAME" NOT NULL ENABLE);

SYS_C0033888                                          [check constraint]
  LASTNAME                                                      
ALTER TABLE "BOOKS"."TEMP_AUTHOR_LIST" MODIFY ("LASTNAME" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE GLOBAL TEMPORARY TABLE "BOOKS"."TEMP_AUTHOR_LIST" 
   (	"ID" NUMBER(*,0), 
	"FIRSTNAME" VARCHAR2(20 BYTE), 
	"LASTNAME" VARCHAR2(20 BYTE)
   ) ON COMMIT DELETE ROWS ;



BOOKS.ΒΙΒΛΊΑ                                                     [table]
------------------------------------------------------------------------
  ΜΟΝΑΔΙΚΌΣ                         NUMBER(38, 0) NOT NULL      
  ΤΊΤΛΟΣ                            VARCHAR2(255) NOT NULL      
  ΠΕΡΙΓΡΑΦΉ                         VARCHAR2(255)               
  ΕΚΔΌΤΗΣ                           NUMBER(38, 0) NOT NULL      

Primary Key

PK_ΒΙΒΛΊΑ                                                  [primary key]
  ΜΟΝΑΔΙΚΌΣ                         ascending                   
ALTER TABLE "BOOKS"."ΒΙΒΛΊΑ" ADD CONSTRAINT "PK_ΒΙΒΛΊΑ" PRIMARY KEY ("ΜΟΝΑΔΙΚΌΣ")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS"  ENABLE;CREATE UNIQUE INDEX "BOOKS"."PK_ΒΙΒΛΊΑ" ON "BOOKS"."ΒΙΒΛΊΑ" ("ΜΟΝΑΔΙΚΌΣ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "USERS" ;

Foreign Keys

FK_ΒΙΒΛΊΑ_PUBLISHERS  [foreign key, on update cascade, on delete restrict]
  ΕΚΔΌΤΗΣ (0..many)--> BOOKS.PUBLISHERS.ID                              
ALTER TABLE "BOOKS"."ΒΙΒΛΊΑ" ADD CONSTRAINT "FK_ΒΙΒΛΊΑ_PUBLISHERS" FOREIGN KEY ("ΕΚΔΌΤΗΣ")
	  REFERENCES "BOOKS"."PUBLISHERS" ("ID") ENABLE;

Table Constraints

SYS_C0033881                                          [check constraint]
  ΜΟΝΑΔΙΚΌΣ                                                     
ALTER TABLE "BOOKS"."ΒΙΒΛΊΑ" MODIFY ("ΜΟΝΑΔΙΚΌΣ" NOT NULL ENABLE);

SYS_C0033882                                          [check constraint]
  ΤΊΤΛΟΣ                                                        
ALTER TABLE "BOOKS"."ΒΙΒΛΊΑ" MODIFY ("ΤΊΤΛΟΣ" NOT NULL ENABLE);

SYS_C0033883                                          [check constraint]
  ΕΚΔΌΤΗΣ                                                       
ALTER TABLE "BOOKS"."ΒΙΒΛΊΑ" MODIFY ("ΕΚΔΌΤΗΣ" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "BOOKS"."ΒΙΒΛΊΑ" 
   (	"ΜΟΝΑΔΙΚΌΣ" NUMBER(*,0), 
	"ΤΊΤΛΟΣ" VARCHAR2(255 BYTE), 
	"ΠΕΡΙΓΡΑΦΉ" VARCHAR2(255 BYTE), 
	"ΕΚΔΌΤΗΣ" NUMBER(*,0)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;



Routines
========================================================================



BOOKS.NEW_PUBLISHER                               [procedure, no result]
------------------------------------------------------------------------
  NEWPUBLISHER                      VARCHAR2, in                
  PUBLISHER                         VARCHAR2, out               

                                                         [specific name]
NEW_PUBLISHER

Definition
                                                            [definition]
CREATE OR REPLACE PROCEDURE "BOOKS"."NEW_PUBLISHER" (NewPublisher IN VARCHAR2, Publisher OUT VARCHAR2)
IS
BEGIN
  Publisher := NewPublisher;
END;
/



BOOKS.CUSTOMADD                      [function, does not return a table]
------------------------------------------------------------------------
                                    NUMBER(22, 38), return      
  ONE                               NUMBER(22, 38), in          
  TWO                               NUMBER(22, 38), in          

                                                         [specific name]
CUSTOMADD

Definition
                                                            [definition]
CREATE OR REPLACE FUNCTION "BOOKS"."CUSTOMADD" (One IN INTEGER, Two IN INTEGER) 
RETURN INTEGER
AS 
BEGIN
  RETURN One + Two;
END;
/



Sequences
========================================================================



BOOKS.PUBLISHER_ID_SEQ                                        [sequence]
------------------------------------------------------------------------
  increment                         1                           
  minimum value                     1                           
  maximum value                     9999999999999999999999999999
  cycle                             false                       



Synonyms
========================================================================



BOOKS.PUBLICATIONS                                             [synonym]
------------------------------------------------------------------------
  PUBLICATIONS --> BOOKS.BOOKS                                  



Data Types
========================================================================

ARRAY                                                        [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  not searchable

BLOB                                                         [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  not searchable

CHAR                                                         [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

CLOB                                                         [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  not searchable

DATE                                                         [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

FLOAT                                                        [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

INTERVALDS                                                   [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

INTERVALYM                                                   [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

LONG                                                         [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  not searchable

LONG RAW                                                     [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  not searchable

NUMBER                                                       [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

RAW                                                          [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

REAL                                                         [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

REF                                                          [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  not searchable

STRUCT                                                       [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  not searchable

TIMESTAMP                                                    [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

TIMESTAMP WITH LOCAL TIME ZONE                               [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

TIMESTAMP WITH TIME ZONE                                     [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

VARCHAR2                                                     [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable



System Information
========================================================================


SchemaCrawler Information
-=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=-
product name                              SchemaCrawler                 
product version                           15.01.03                      

