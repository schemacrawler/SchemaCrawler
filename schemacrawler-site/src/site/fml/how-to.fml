<?xml version="1.0" encoding="UTF-8"?>
<faqs
  xmlns="http://maven.apache.org/FML/1.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/FML/1.0 http://maven.apache.org/xsd/fml-1.0.xsd"
  title="SchemaCrawler - How-to"
>
  <part id="command-line">
    <title>How to Use the SchemaCrawler Command-line</title>
    <faq id="sc-main">
      <question>
        Explanation of the SchemaCrawler main Programs
      </question>
      <answer>
        <p>
          <table
            cellspacing="5"
            cellpadding="5"
          >
            <tr>
              <td valign="top">
                <ul>
                  <li>schemacrawler.Main</li>
                </ul>
              </td>
              <td valign="top">
                <p>This is the most usual way to launch SchemaCrawler from the
                  command-line. This
                  launch offer a number
                  of connection options,
                  including by JDBC driver and URL, and
                  by a connection defined
                  in a properties
                  configuration file. There are options to
                  load
                  configuration from properties files.
                </p>
                <p>JDBC drivers and other external libraries must be available
                  on the classpath for
                  this application to
                  function.
                </p>
                <p>For help, use the -h command-line switch.</p>
              </td>
            </tr>
            <tr>
              <td valign="top">
                <ul>
                  <li>schemacrawler.tools.integration.spring.Main</li>
                </ul>
              </td>
              <td valign="top">
                <p>
                  An alternate to
                  <code>schemacrawler.Main,</code>
                  where configuration, including configuration of the
                  SchemaCrawler command is done
                  by means of a Spring
                  Framework
                  application context file.
                </p>
                <p>JDBC drivers, Spring Framework libraries, and other external
                  libraries must be
                  available on the
                  classpath for this
                  application to function.
                </p>
                <p>For help, use the -h command-line switch.</p>
              </td>
            </tr>
            <tr>
              <td valign="top">
                <ul>
                  <li>schemacrawler.utility.TestDatabase</li>
                </ul>
              </td>
              <td valign="top">
                <p>Started the test database server, with a test schema, and
                  test data. This is used
                  for examples. Any
                  schema or data
                  modifications will be restored when the server is
                  restarted.
                </p>
                <p>JDBC drivers for HyperSQL, and other external libraries
                  must be available
                  on the
                  classpath for
                  this application to
                  function.
                </p>
              </td>
            </tr>
          </table>
        </p>
      </answer>
    </faq>
    <faq id="arbitrary-query">
      <question>
        How to run an arbitrary query
      </question>
      <answer>
        <p>
          Run SchemaCrawler withquery, with a query for the command
            <code>"-command=SELECT * FROM PUBLIC.BOOKS.AUTHORS"</code>
             (The quotes are required.)
        </p>
      </answer>
    </faq>
  </part>
  <part id="include-exclude">
    <title>Include and Exclude Stuff from the Output</title>
    <faq id="excluded-tables">
      <question>
        How to see why certain tables or columns for excluded
      </question>
      <answer>
        <p>
          Re-run SchemaCrawler with
          <code>-loglevel=ALL</code>
          on the command-line.
        </p>
      </answer>
    </faq>
    <faq id="include-significant-columns">
      <question>
        How to include only significant columns - that is, columns that are part of a primary key or unique index,
        or columns that are foreign keys
      </question>
      <answer>
        <p>
          Re-run SchemaCrawler with the
          <code>-infolevel=standard -command=brief</code>
          command-line options.
        </p>
      </answer>
    </faq>    
    <faq id="excluded-tables-or-columns">
      <question>
        How to include or exclude certain tables or columns
      </question>
      <answer>
        <p>
          Change the configuration for the SchemaCrawler the table or column
          include and exclude
          patterns in the
          <code>schemacrawler.config.properties </code>
          file. The include or exclude specification is a
          <a
            href="http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html"
          > Java regular expression </a>
          . The include pattern is evaluated first, and the exclusions are
          made
          from the included
          tables or columns
          list.
        </p>
        <p>
          Also see the
          <a href="faq.html#commands">filtering and grep command-line options.</a>
        </p>
      </answer>
    </faq>
    <faq id="excluded-views">
      <question>
        How to exclude database views from the output
      </question>
      <answer>
        <p>
          Use the -tabletypes command-line option, without VIEW. For example,
          you can provide -tabletypes=TABLE. Further, see the
          <a href="faq.html#commands">details on the command-line options.</a>
        </p>
      </answer>
    </faq>
    <faq id="excluded-routines">
      <question>
        How to exclude routines, that is, stored procedures and
        functions from the output
      </question>
      <answer>
        <p>
          The option in the configuration can be overridden by the
          -routines=
          command-line option.
          Further,
          see the
          <a href="faq.html#commands">details on the command-line options.</a>
        </p>
      </answer>
    </faq>
    <faq id="excluded-functions">
      <question>
        How to exclude database functions from the output
      </question>
      <answer>
        <p>
          Use the -routinetypes=FUNCTION command-line option. Further, see the
          <a href="faq.html#commands">details on the command-line options.</a>
        </p>
      </answer>
    </faq>
  </part>
  <part id="diff-able-output">
    <title>Create diff-able Output</title>
    <faq id="sorting">
      <question>
        How to sort columns, foreign-keys and indexes alphabetically
      </question>
      <answer>
        <p>
          Change the configuration for the SchemaCrawler "sort
          alphabetically"
          properties in the
          <code>schemacrawler.config.properties </code>
          file. Also see the
          <a href="faq.html#commands">sorting command-line options.</a>
        </p>
      </answer>
    </faq>
    <faq id="diff-data-types">
      <question>
        How to diff column data types across databases
      </question>
      <answer>
        <p>
          Change the configuration for the SchemaCrawler
          <code>schemacrawler.format.show_standard_column_type_names=true
          </code>
          in the
          <code>schemacrawler.config.properties </code>
          file. This setting will show standard data types across different
          database systems. On the
          other hand, if you
          want to see the real
          database specific data types, change the setting
          to
          a value of true.
        </p>
      </answer>
    </faq>
    <faq id="ordinal-numbers">
      <question>
        How to allow diffs of tables that have columns added in between
      </question>
      <answer>
        <p>
          When columns are added into a table, they can change the column
          ordinal number. This can
          mess up the diffs.
          Change the configuration for
          the SchemaCrawler
          <code>schemacrawler.format.show_ordinal_numbers=false </code>
          in the
          <code>schemacrawler.config.properties </code>
          file. You can combine this setting with the setting to sort columns
          alphabetically to
          produce diff friendly
          output.
        </p>
      </answer>
    </faq>
    <faq id="portable-names">
      <question>
        How to hide display of object names that can change from server to server
      </question>
      <answer>
        <p>Use the -portablenames=true command-line option to allows for easy comparison between databases, by hiding
  foreign key names, constraint names, trigger names, specific names for procedures, 
          and index and primary key names, and not showing the fully-qualified table name.
        </p>
      </answer>
    </faq>
    <faq id="table-row-counts">
      <question>
        How to show table row counts in output and diagrams
      </question>
      <answer>
        <p>
          Show table row counts in output, and diagrams.
          Change the configuration for
          the SchemaCrawler
          <code>schemacrawler.format.show_row_counts=true </code>
          in the
          <code>schemacrawler.config.properties </code>
          file. 
        </p>
      </answer>
    </faq>        
    <faq id="index-names">
      <question>
        How to hide foreign key names, constraint names, trigger names, specific names for procedures, 
          or index and primary key names
      </question>
      <answer>
        <p>
          If foreign key names, constraint names, trigger names, specific names for procedures, 
          or index and primary key names are not explicitly
          provided while creating a schema, most database systems assign default
          names. These names can show up as spurious diffs in SchemaCrawler output. Change the
          configuration for the following properties in your
          <code>schemacrawler.config.properties </code>
          file.
        </p>
        <p>All of these names can be hidden by using the -portablenames command-line option.</p>
        <source><![CDATA[
schemacrawler.format.hide_primarykey_names=false
schemacrawler.format.hide_foreignkey_names=false
schemacrawler.format.hide_index_names=false
schemacrawler.format.hide_trigger_names=false
schemacrawler.format.hide_routine_specific_names=false
schemacrawler.format.hide_constraint_names=false
]]></source>
      </answer>
    </faq>
    <faq id="hide-schema-names">
      <question>
        How to hide catalog and schema names in text output
      </question>
      <answer>
        <p>
          Change the configuration for the SchemaCrawler
          <code>schemacrawler.format.show_unqualified_names=true
          </code>
          in the
          <code>schemacrawler.config.properties </code>
          file. This setting will show unqualified names of database objects
          such as tables and prcodures.
          That is, the catalog and schema names will not be displayed. Use with care,
          especially if you have foreign keys
          that reference tables in other
          schemas, or synonyms.
        </p>
      </answer>
    </faq>
  </part>
  <part id="integrations">
    <title>Integrations</title>
    <faq id="javascript">
      <question>
        How to script with your database
      </question>
      <answer>
        <p>
          SchemaCrawler has built-in
          support to be used with
          JavaScript scripts.
          Write your JavaScript file,
          assuming that a "catalog" variable
          containing the database schema will
          be
          available.
          A "connection" variable will also be
          available, and you
          will be able
          to execute SQL against your
          database.
          Run SchemaCrawler with
          the command-line options -
          <code>-command script -outputformat &lt;your script file&gt;</code>
          . See the example in the
          <code>examples\javascript</code>
          directory for more details.
        </p>
      </answer>
    </faq>
    <faq id="velocity">
      <question>
        How to create your own output format
      </question>
      <answer>
        <p>
          SchemaCrawler integrates with
          <a href="http://velocity.apache.org/">Apache Velocity</a>
          to allow for templated ouput. Put Velocity on your classpath, and
          create your template, and
          run SchemaCrawler
          with the command-line
          options -
          <code>-command script -outputformat &lt;your script file&gt;</code>
          .
          <code>-command velocity -outputformat &lt;your Velocity template&gt;
          </code>
          . See the Velocity example in the
          <a
            href="http://github.com/sualeh/SchemaCrawler/releases/"
          >SchemaCrawler examples</a>
          download.
        </p>
      </answer>
    </faq>
    <faq id="diagrams">
      <question>
        How to create a database diagram of your schema
      </question>
      <answer>
        <p>
          SchemaCrawler integrates with
          <a href="http://www.graphviz.org/">Graphviz</a>
          to produce graph images. See the diagram example in the
          <a
            href="http://github.com/sualeh/SchemaCrawler/releases/"
          >SchemaCrawler examples</a>
          download.
          For more details, see the <a href="diagramming.html">diagram section</a>.
        </p>
      </answer>
    </faq>
    <faq id="graphviz_opts">
      <question>
        How to provide additional GraphViz command-line options
      </question>
      <answer>
        <p>
          SchemaCrawler integrates with
          <a href="http://www.graphviz.org/">Graphviz</a>
          to produce graph images. See the previous question for 
          details.
        </p>
        <p>
          You can provide additional GraphViz command-line options using
          the SC_GRAPHVIZ_OPTS environmental variable, or pass in
          the additional arguments using the SC_GRAPHVIZ_OPTS Java
          system property.
        </p>
      </answer>
    </faq>    
  </part>
  <part id="projects">
    <title>How to Use SchemaCrawler in Projects</title>
    <faq id="api">
      <question>
        How to use SchemaCrawler programmatically
      </question>
      <answer>
        <p>
          Read
          <a href="http://www.devx.com/Java/Article/32443">Java API Makes Database Metadata as Easily Accessible as
            POJOs
          </a>
          for an introduction to the SchemaCrawler API. (This article may
          refer
          to an older release
          of the SchemaCrawler
          API, but the concepts are the
          same.) You can also browse the
          <a href="apidocs/index.html">javadocs</a>
          .
        </p>
        <p>
          <i>
            See the api example in the
            <a
              href="http://github.com/sualeh/SchemaCrawler/releases/"
            >SchemaCrawler examples</a>
            download.
          </i>
        </p>
        <p>
          Or, if you are impatient, try code similar to the following:
          <source><![CDATA[
final SchemaCrawlerOptions options = new SchemaCrawlerOptions();
// Set what details are required in the schema - this affects the
// time taken to crawl the schema
options.setSchemaInfoLevel(SchemaInfoLevel.standard());

final Catalog catalog = SchemaCrawlerUtility.getCatalog(connection, options);
for (final Schema schema: catalog.getSchemas())
{
  System.out.println(schema);
  for (final Table table: schema.getTables())
  {
    System.out.println("o--> " + table);
    for (final Column column: table.getColumns())
    {
      System.out.println("     o--> " + column);
    }
  }
}
]]></source>
        </p>
      </answer>
    </faq>
    <faq id="maven-project">
      <question>
        How to use SchemaCrawler in a Maven Project
      </question>
      <answer>
        <p>In order to use SchemaCrawler in your Maven projects, add a
          dependency to SchemaCrawler
          in your pom.xml.
        </p>
        <source><![CDATA[
<dependencies>
  ...
  <dependency>
    <groupId>us.fatehi</groupId>
    <artifactId>schemacrawler</artifactId>
    <version>14.07.02</version>
  </dependency>
</dependencies>
        ]]></source>
      </answer>
    </faq>
    <faq id="ant">
      <question>
        How to use SchemaCrawler as an ant Task
      </question>
      <answer>
        <p>Call the SchemaCrawler command-line from ant, using the exec task.</p>
      </answer>
    </faq>
    <faq id="maven-report">
      <question>
        How to use SchemaCrawler To Produce a Maven Report
      </question>
      <answer>
        <p>
          <a
            href="http://mvn-schemacrwlr.sourceforge.net/schemacrawler-maven-plugin/1.0/"
          >SchemaCrawler Maven Plugin</a>
          is a SourceForge project that provides a Maven plugin that can
          generate database
          documentation for a
          Maven-generated website.
        </p>
      </answer>
    </faq>
  </part>
  <part id="advanced">
    <title>Advanced SchemaCrawler Usage</title>
    <faq id="definitions">
      <question>
        How to get trigger, view, stored procedure and function definitions
      </question>
      <answer>
        <p>
          <i>
            See the documentation in
            <a href="features/INFORMATION_SCHEMA.html">INFORMATION_SCHEMA Views</a>
            .
          </i>
        </p>
      </answer>
    </faq>
    <faq id="check_constraints">
      <question>
        How to obtain check constraints
      </question>
      <answer>
        <p>
          <i>
            See the documentation in
            <a href="features/INFORMATION_SCHEMA.html">INFORMATION_SCHEMA Views</a>
            .
          </i>
        </p>
      </answer>
    </faq>
    <faq id="create_order">
      <question>
        How to get tables in "create" or "drop" order
      </question>
      <answer>
        <p>
          Tables are sorted in alphabetical order by default. If you turn
          alphabetical sorting off,
          the tables
          will be
          displayed in "create" order
          - that is, tables with no
          foreign-key
          dependencies will be displayed
          first. The
          "drop" order is
          the reverse of the "create" order.
          Use the
          following command-line
          arguments to obtain tables
          in "create" order:
          <code>-command=list -sorttables=false -routines=</code>
        </p>
      </answer>
    </faq>    
    <faq id="plugins">
      <question>
        How to extend SchemaCrawler by adding a new command, new linter, or new database system support
      </question>
      <answer>
        <p>
          See the
          <a href="plugins.html">SchemaCrawler Plugins</a>
          page.
        </p>
      </answer>
    </faq>
    <faq id="configure_linter">
      <question>
        How to configure SchemaCrawler linters
      </question>
      <answer>
        <p>
          See
          <a href="lint.html">SchemaCrawler Lint</a>
          for details.
        </p>
      </answer>
    </faq>
    <faq id="add_new_linter">
      <question>
        How to extend SchemaCrawler by adding a new linter
      </question>
      <answer>
        <p>
          See
          <a href="lint.html">SchemaCrawler Lint</a>
          for details.
        </p>
      </answer>
    </faq>
    <faq id="fail_build_linter">
      <question>
        How to fail a build with too many SchemaCrawler lints
      </question>
      <answer>
        <p>
          See
          <a href="lint.html">SchemaCrawler Lint</a>
          for details.
        </p>
      </answer>
    </faq>    
  </part>
</faqs>