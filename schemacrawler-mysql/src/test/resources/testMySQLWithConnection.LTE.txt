

System Information
========================================================================

generated by                              SchemaCrawler 16.20.4         
generated on                              2023-11-05 13:39:44           
database version                          MySQL 8.0.31                  
driver version                            MySQL Connector/J mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)



Tables
========================================================================



books.authors                                                    [table]
------------------------------------------------------------------------
Contact details for book authors
  `Id`                              INT NOT NULL                
  `FirstName`                       VARCHAR(20) NOT NULL        
  `LastName`                        VARCHAR(20) NOT NULL        
  `Address1`                        VARCHAR(255)                
  `Address2`                        VARCHAR(255)                
  `City`                            VARCHAR(50)                 
  `State`                           CHAR(2)                     
  `PostalCode`                      VARCHAR(10)                 
  `Country`                         VARCHAR(50)                 

Primary Key

`PRIMARY`                                                  [primary key]
  `Id`                                                          

Foreign Keys

`Z_FK_Author`                               [foreign key, with restrict]
  `Id` <--(0..many) books.bookauthors.`AuthorId`                              

Indexes

`PRIMARY`                                                 [unique index]
  `Id`                              ascending                   

`IDX_B_Authors`                                       [non-unique index]
  `LastName`                        ascending                   
  `FirstName`                       ascending                   

`IDX_A_Authors`                                       [non-unique index]
Index on author's location
  `City`                            ascending                   
  `State`                           ascending                   
  `PostalCode`                      ascending                   
  `Country`                         ascending                   

Triggers

`TRG_Authors`                           [trigger, after delete, per row]
UPDATE Publishers 
      SET Publisher = 'Jacob' 
      WHERE Publisher = 'John'

Table Constraints

`CHECK_UPPERCASE_State`                               [check constraint]
(`State` = upper(`State`))



books.authorslist                                                 [view]
------------------------------------------------------------------------
VIEW
  `Id`                              INT NOT NULL                
  `FirstName`                       VARCHAR(20) NOT NULL        
  `LastName`                        VARCHAR(20) NOT NULL        

Definition
                                                            [definition]
select `books`.`authors`.`Id` AS `Id`,`books`.`authors`.`FirstName` AS `FirstName`,`books`.`authors`.`LastName` AS `LastName` from `books`.`authors`

Table Usage

books.authors                                                    [table]



books.bookauthors                                                [table]
------------------------------------------------------------------------
Relationship between books and their authors, 
along with the latest updated information
  `BookId`                          INT NOT NULL                
  `AuthorId`                        INT NOT NULL                
  `SomeData`                        VARCHAR(30)                 

Foreign Keys

`Z_FK_Author`                               [foreign key, with restrict]
  `AuthorId` (0..many)--> books.authors.`Id`                              

bookauthors_ibfk_1                          [foreign key, with restrict]
  `BookId` (0..many)--> books.books.`Id`                              

Indexes

`Z_FK_Author`                                         [non-unique index]
  `AuthorId`                        ascending                   

`UIDX_BookAuthors`                                        [unique index]
  `BookId`                          ascending                   
  `AuthorId`                        ascending                   

Table Constraints

`UIDX_BookAuthors`                                   [unique constraint]



books.books                                                      [table]
------------------------------------------------------------------------
Details for published books
  `Id`                              INT NOT NULL                
                                    Unique (internal) id for book
  `Title`                           VARCHAR(255) NOT NULL       
                                    Book title                  
  `Description`                     VARCHAR(255)                
                                    Book description
(Usually the blurb from the book jacket or promotional materials)
  `PublisherId`                     INT NOT NULL                
                                    Foreign key to the book publisher
  `PublicationDate`                 DATE                        
                                    Book publication date       
  `Price`                           FLOAT(12, 0)                
                                    Current price for the book  
  `PreviousEditionId`               INT                         

Primary Key

`PRIMARY`                                                  [primary key]
  `Id`                                                          

Foreign Keys

bookauthors_ibfk_1                          [foreign key, with restrict]
  `Id` <--(0..many) books.bookauthors.`BookId`                              

`FK_PreviousEdition`                        [foreign key, with restrict]
  `Id` <--(0..1) `PreviousEditionId`                              

Indexes

`PRIMARY`                                                 [unique index]
  `Id`                              ascending                   

`U_PreviousEdition`                                       [unique index]
  `PreviousEditionId`               ascending                   

Table Constraints

`U_PreviousEdition`                                  [unique constraint]



books.celebrities                                                [table]
------------------------------------------------------------------------
  `Id`                              INT NOT NULL                
  `Name`                            VARCHAR(20)                 

Primary Key

`PRIMARY`                                                  [primary key]
  `Id`                                                          

Foreign Keys

`celebrity updates_ibfk_1`                  [foreign key, with restrict]
  `Id` <--(0..1) books.`celebrity updates`.`Celebrity Id`                              

Indexes

`PRIMARY`                                                 [unique index]
  `Id`                              ascending                   



books.`celebrity updates`                                        [table]
------------------------------------------------------------------------
  `Celebrity Id`                    INT NOT NULL                
  `UPDATE`                          VARCHAR(20)                 

Primary Key

`PRIMARY`                                                  [primary key]
  `Celebrity Id`                                                

Foreign Keys

`celebrity updates_ibfk_1`                  [foreign key, with restrict]
  `Celebrity Id` (0..1)--> books.celebrities.`Id`                              

Indexes

`PRIMARY`                                                 [unique index]
  `Celebrity Id`                    ascending                   



books.coupons                                                    [table]
------------------------------------------------------------------------
  `Id`                              INT NOT NULL                
  `Data`                            TEXT(65535)                 
  `Coupons`                         INT                         
  `Books`                           VARCHAR(20)                 

Primary Key

`PRIMARY`                                                  [primary key]
  `Id`                                                          

Indexes

`PRIMARY`                                                 [unique index]
  `Id`                              ascending                   



books.person                                                     [table]
------------------------------------------------------------------------
  name                              VARCHAR(40)                 
  tshirt                            ENUM(6)                     
                                    'small', medium', large'    
  mood                              ENUM(5)                     
                                    'sad', ok', happy'          



books.publishers                                                 [table]
------------------------------------------------------------------------
List of book publishers
  `Id`                              BIGINT UNSIGNED NOT NULL    
                                    auto-incremented            
                                    Unique (internal) id for book publisher
  `Publisher`                       VARCHAR(255)                
                                    Name of book publisher      

Primary Key

`PRIMARY`                                                  [primary key]
  `Id`                                                          

Indexes

`Id`                                                      [unique index]
  `Id`                              ascending                   

`PRIMARY`                                                 [unique index]
  `Id`                              ascending                   

Table Constraints

`Id`                                                 [unique constraint]



books.x_customers                                                [table]
------------------------------------------------------------------------
  CUSTOMERID                        INT NOT NULL                
  CUSTOMER_NAME                     VARCHAR(80)                 
  SOCIAL_SECURITY_NUMBER            CHAR(9)                     
                                    hidden                      



books.x_employees                                                [table]
------------------------------------------------------------------------
  EMPLOYEEID                        INT NOT NULL                
  EMPLOYEE_NAME                     VARCHAR(30)                 
  START_DATE                        DATE                        
  END_DATE                          DATE                        
  ANNUAL_SALARY                     INT                         
  HOURLY_RATE                       DOUBLE(22, 0)               
                                    generated                   
  ACTIVE                            CHAR(1)                     
                                    generated                   



Routines
========================================================================



books.`New_Publisher`                             [procedure, no result]
------------------------------------------------------------------------
Force name to 'New Publisher'
  `NewPublisher`                    VARCHAR(50), in             
  `Publisher`                       VARCHAR(50), out            

                                                         [specific name]
`New_Publisher`

Definition
                                                            [definition]
SET Publisher = NewPublisher



books.`CustomAdd`                    [function, does not return a table]
------------------------------------------------------------------------
  `One`                             INT, in                     

                                                         [specific name]
`CustomAdd`

Definition
                                                            [definition]
RETURN One + 1



Data Types
========================================================================

BIGINT                                                       [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

BIGINT UNSIGNED                                              [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

BINARY                                                       [data type]
  defined with (M)
  nullable
  not auto-incrementable
  searchable

BIT                                                          [data type]
  defined with [(M)]
  nullable
  not auto-incrementable
  searchable

BLOB                                                         [data type]
  defined with [(M)]
  nullable
  not auto-incrementable
  searchable

BOOL                                                         [data type]
  defined with no parameters
  nullable
  auto-incrementable
  searchable

CHAR                                                         [data type]
  defined with [(M)] [CHARACTER SET charset_name] [COLLATE collation_name]
  nullable
  not auto-incrementable
  searchable

DATE                                                         [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

DATETIME                                                     [data type]
  defined with [(fsp)]
  nullable
  not auto-incrementable
  searchable

DECIMAL                                                      [data type]
  defined with [(M[,D])] [UNSIGNED] [ZEROFILL]
  nullable
  not auto-incrementable
  searchable

DOUBLE                                                       [data type]
  defined with [(M,D)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

DOUBLE PRECISION                                             [data type]
  defined with [(M,D)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

DOUBLE PRECISION UNSIGNED                                    [data type]
  defined with [(M,D)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

DOUBLE UNSIGNED                                              [data type]
  defined with [(M,D)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

ENUM                                                         [data type]
  defined with ('value1','value2',...) [CHARACTER SET charset_name] [COLLATE collation_name]
  nullable
  not auto-incrementable
  searchable

FLOAT                                                        [data type]
  defined with [(M,D)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

INT                                                          [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

INTEGER                                                      [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

INTEGER UNSIGNED                                             [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

INT UNSIGNED                                                 [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

LONGBLOB                                                     [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

LONGTEXT                                                     [data type]
  defined with [CHARACTER SET charset_name] [COLLATE collation_name]
  nullable
  not auto-incrementable
  searchable

LONG VARBINARY                                               [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

LONG VARCHAR                                                 [data type]
  defined with [CHARACTER SET charset_name] [COLLATE collation_name]
  nullable
  not auto-incrementable
  searchable

MEDIUMBLOB                                                   [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

MEDIUMINT                                                    [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

MEDIUMINT UNSIGNED                                           [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

MEDIUMTEXT                                                   [data type]
  defined with [CHARACTER SET charset_name] [COLLATE collation_name]
  nullable
  not auto-incrementable
  searchable

NUMERIC                                                      [data type]
  defined with [(M[,D])] [UNSIGNED] [ZEROFILL]
  nullable
  not auto-incrementable
  searchable

REAL                                                         [data type]
  defined with [(M,D)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

SET                                                          [data type]
  defined with ('value1','value2',...) [CHARACTER SET charset_name] [COLLATE collation_name]
  nullable
  not auto-incrementable
  searchable

SMALLINT                                                     [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

SMALLINT UNSIGNED                                            [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

TEXT                                                         [data type]
  defined with [(M)] [CHARACTER SET charset_name] [COLLATE collation_name]
  nullable
  not auto-incrementable
  searchable

TIME                                                         [data type]
  defined with [(fsp)]
  nullable
  not auto-incrementable
  searchable

TIMESTAMP                                                    [data type]
  defined with [(fsp)]
  nullable
  not auto-incrementable
  searchable

TINYBLOB                                                     [data type]
  defined with no parameters
  nullable
  not auto-incrementable
  searchable

TINYINT                                                      [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

TINYINT UNSIGNED                                             [data type]
  defined with [(M)] [UNSIGNED] [ZEROFILL]
  nullable
  auto-incrementable
  searchable

TINYTEXT                                                     [data type]
  defined with [CHARACTER SET charset_name] [COLLATE collation_name]
  nullable
  not auto-incrementable
  searchable

VARBINARY                                                    [data type]
  defined with (M)
  nullable
  not auto-incrementable
  searchable

VARCHAR                                                      [data type]
  defined with (M) [CHARACTER SET charset_name] [COLLATE collation_name]
  nullable
  not auto-incrementable
  searchable

YEAR                                                         [data type]
  defined with [(4)]
  nullable
  not auto-incrementable
  searchable



System Information
========================================================================


Database Server Information
-=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=-
database                                  books                         
hostname                                  3a2da0e9c5d9                  
server_uuid                               bae5fcb1-7be0-11ee-8221-0242ac110003


Database Information
-=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=-
database product name                     MySQL                         
database product version                  8.0.31                        
database user name                        schemacrawler@172.17.0.1      


Database Characteristics
-=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=-
all procedures are callable               false                         
all tables are selectable                 false                         
auto commit failure closes all result sets  false                         
catalog separator                         .                             
catalog term                              database                      
catalogs                                  books, information_schema, performance_schema
client info properties                                                  
data definition causes transaction commit  true                          
data definition ignored in transactions   false                         
database major version                    8                             
database minor version                    0                             
default transaction isolation             4                             
deletes are detected for TYPE_FORWARD_ONLY result sets  false                         
deletes are detected for TYPE_SCROLL_INSENSITIVE result sets  false                         
deletes are detected for TYPE_SCROLL_SENSITIVE result sets  false                         
does max row size include blobs           true                          
driver major version                      8                             
driver minor version                      2                             
extra name characters                     #@                            
generated key always returned             true                          
identifier quote string                   `                             
inserts are detected for TYPE_FORWARD_ONLY result sets  false                         
inserts are detected for TYPE_SCROLL_INSENSITIVE result sets  false                         
inserts are detected for TYPE_SCROLL_SENSITIVE result sets  false                         
is catalog at start                       true                          
is read only                              false                         
JDBC major version                        4                             
JDBC minor version                        2                             
locators update copy                      true                          
max binary literal length                 16777208                      
max catalog name length                   32                            
max char literal length                   16777208                      
max column name length                    64                            
max columns in group by                   64                            
max columns in index                      16                            
max columns in order by                   64                            
max columns in select                     256                           
max columns in table                      512                           
max connections                           0                             
max cursor name length                    64                            
max index length                          256                           
max logical lob size                      0                             
max procedure name length                 0                             
max row size                              2147483639                    
max schema name length                    0                             
max statement length                      65531                         
max statements                            0                             
max table name length                     64                            
max tables in select                      256                           
max user name length                      16                            
null plus non null is null                true                          
nulls are sorted at end                   false                         
nulls are sorted at start                 false                         
nulls are sorted high                     false                         
nulls are sorted low                      true                          
numeric functions                         ABS, ACOS, ASIN, ATAN, ATAN2, BIT_COUNT, CEILING, COS, COT, DEGREES, EXP, FLOOR, LOG, LOG10, MAX, MIN, MOD, PI, POW, POWER, RADIANS, RAND, ROUND, SIN, SQRT, TAN, TRUNCATE
others deletes are visible for TYPE_FORWARD_ONLY result sets  false                         
others deletes are visible for TYPE_SCROLL_INSENSITIVE result sets  false                         
others deletes are visible for TYPE_SCROLL_SENSITIVE result sets  false                         
others inserts are visible for TYPE_FORWARD_ONLY result sets  false                         
others inserts are visible for TYPE_SCROLL_INSENSITIVE result sets  false                         
others inserts are visible for TYPE_SCROLL_SENSITIVE result sets  false                         
others updates are visible for TYPE_FORWARD_ONLY result sets  false                         
others updates are visible for TYPE_SCROLL_INSENSITIVE result sets  false                         
others updates are visible for TYPE_SCROLL_SENSITIVE result sets  false                         
own deletes are visible for TYPE_FORWARD_ONLY result sets  false                         
own deletes are visible for TYPE_SCROLL_INSENSITIVE result sets  false                         
own deletes are visible for TYPE_SCROLL_SENSITIVE result sets  false                         
own inserts are visible for TYPE_FORWARD_ONLY result sets  false                         
own inserts are visible for TYPE_SCROLL_INSENSITIVE result sets  false                         
own inserts are visible for TYPE_SCROLL_SENSITIVE result sets  false                         
own updates are visible for TYPE_FORWARD_ONLY result sets  false                         
own updates are visible for TYPE_SCROLL_INSENSITIVE result sets  false                         
own updates are visible for TYPE_SCROLL_SENSITIVE result sets  false                         
procedure term                            PROCEDURE                     
result set holdability                    1                             
row id lifetime                           ROWID_UNSUPPORTED             
schema term                                                             
schemas                                                                 
search string escape                      \                             
SQL keywords                              ACCESSIBLE, ADD, ANALYZE, ASC, BEFORE, CASCADE, CHANGE, CONTINUE, DATABASE, DATABASES, DAY_HOUR, DAY_MICROSECOND, DAY_MINUTE, DAY_SECOND, DELAYED, DESC, DISTINCTROW, DIV, DUAL, ELSEIF, EMPTY, ENCLOSED, ESCAPED, EXIT, EXPLAIN, FIRST_VALUE, FLOAT4, FLOAT8, FORCE, FULLTEXT, GENERATED, GROUPS, HIGH_PRIORITY, HOUR_MICROSECOND, HOUR_MINUTE, HOUR_SECOND, IF, IGNORE, INDEX, INFILE, INT1, INT2, INT3, INT4, INT8, IO_AFTER_GTIDS, IO_BEFORE_GTIDS, ITERATE, JSON_TABLE, KEY, KEYS, KILL, LAG, LAST_VALUE, LEAD, LEAVE, LIMIT, LINEAR, LINES, LOAD, LOCK, LONG, LONGBLOB, LONGTEXT, LOOP, LOW_PRIORITY, MASTER_BIND, MASTER_SSL_VERIFY_SERVER_CERT, MAXVALUE, MEDIUMBLOB, MEDIUMINT, MEDIUMTEXT, MIDDLEINT, MINUTE_MICROSECOND, MINUTE_SECOND, NO_WRITE_TO_BINLOG, NTH_VALUE, NTILE, OPTIMIZE, OPTIMIZER_COSTS, OPTION, OPTIONALLY, OUTFILE, PURGE, READ, READ_WRITE, REGEXP, RENAME, REPEAT, REPLACE, REQUIRE, RESIGNAL, RESTRICT, RLIKE, SCHEMA, SCHEMAS, SECOND_MICROSECOND, SEPARATOR, SHOW, SIGNAL, SPATIAL, SQL_BIG_RESULT, SQL_CALC_FOUND_ROWS, SQL_SMALL_RESULT, SSL, STARTING, STORED, STRAIGHT_JOIN, TERMINATED, TINYBLOB, TINYINT, TINYTEXT, UNDO, UNLOCK, UNSIGNED, USAGE, USE, UTC_DATE, UTC_TIME, UTC_TIMESTAMP, VARBINARY, VARCHARACTER, VIRTUAL, WHILE, WRITE, XOR, YEAR_MONTH, ZEROFILL
SQL state type                            2                             
stores lower case identifiers             true                          
stores lower case quoted identifiers      true                          
stores mixed case identifiers             false                         
stores mixed case quoted identifiers      false                         
stores upper case identifiers             false                         
stores upper case quoted identifiers      true                          
string functions                          ASCII, BIN, BIT_LENGTH, CHAR, CHARACTER_LENGTH, CHAR_LENGTH, CONCAT, CONCAT_WS, CONV, ELT, EXPORT_SET, FIELD, FIND_IN_SET, HEX, INSERT, INSTR, LCASE, LEFT, LENGTH, LOAD_FILE, LOCATE, LOCATE, LOWER, LPAD, LTRIM, MAKE_SET, MATCH, MID, OCT, OCTET_LENGTH, ORD, POSITION, QUOTE, REPEAT, REPLACE, REVERSE, RIGHT, RPAD, RTRIM, SOUNDEX, SPACE, STRCMP, SUBSTRING, SUBSTRING, SUBSTRING, SUBSTRING, SUBSTRING_INDEX, TRIM, UCASE, UPPER
supports alter table with add column      true                          
supports alter table with drop column     true                          
supports ANSI92 entry level SQL           true                          
supports ANSI92 full SQL                  false                         
supports ANSI92 intermediate SQL          false                         
supports batch updates                    true                          
supports catalogs in data manipulation    true                          
supports catalogs in index definitions    true                          
supports catalogs in privilege definitions  true                          
supports catalogs in procedure calls      true                          
supports catalogs in table definitions    true                          
supports column aliasing                  true                          
supports convert                          false                         
supports core SQL grammar                 true                          
supports correlated subqueries            true                          
supports data definition and data manipulation transactions  false                         
supports data manipulation transactions only  false                         
supports different table correlation names  true                          
supports expressions in order by          true                          
supports extended SQL grammar             false                         
supports full outer joins                 false                         
supports get generated keys               true                          
supports group by                         true                          
supports group by beyond select           true                          
supports group by unrelated               true                          
supports integrity enhancement facility   false                         
supports like escape clause               true                          
supports limited outer joins              true                          
supports minimum SQL grammar              true                          
supports mixed case identifiers           false                         
supports mixed case quoted identifiers    false                         
supports multiple open results            true                          
supports multiple result sets             true                          
supports multiple transactions            true                          
supports named parameters                 false                         
supports non nullable columns             true                          
supports open cursors across commit       false                         
supports open cursors across rollback     false                         
supports open statements across commit    false                         
supports open statements across rollback  false                         
supports order by unrelated               false                         
supports outer joins                      true                          
supports positioned delete                false                         
supports positioned update                false                         
supports ref cursors                      false                         
supports result set type for TYPE_FORWARD_ONLY result sets  true                          
supports result set type for TYPE_SCROLL_INSENSITIVE result sets  true                          
supports result set type for TYPE_SCROLL_SENSITIVE result sets  false                         
supports savepoints                       true                          
supports schemas in data manipulation     false                         
supports schemas in index definitions     false                         
supports schemas in privilege definitions  false                         
supports schemas in procedure calls       false                         
supports schemas in table definitions     false                         
supports select for update                true                          
supports sharding                         false                         
supports statement pooling                false                         
supports stored functions using call syntax  true                          
supports stored procedures                true                          
supports subqueries in comparisons        true                          
supports subqueries in exists             true                          
supports subqueries in ins                true                          
supports subqueries in quantifieds        true                          
supports table correlation names          true                          
supports transactions                     true                          
supports union                            true                          
supports union all                        true                          
system functions                          DATABASE, USER, SYSTEM_USER, SESSION_USER, PASSWORD, ENCRYPT, LAST_INSERT_ID, VERSION
table types                               LOCAL TEMPORARY, SYSTEM TABLE, SYSTEM VIEW, TABLE, VIEW
time date functions                       DAYOFWEEK, WEEKDAY, DAYOFMONTH, DAYOFYEAR, MONTH, DAYNAME, MONTHNAME, QUARTER, WEEK, YEAR, HOUR, MINUTE, SECOND, PERIOD_ADD, PERIOD_DIFF, TO_DAYS, FROM_DAYS, DATE_FORMAT, TIME_FORMAT, CURDATE, CURRENT_DATE, CURTIME, CURRENT_TIME, NOW, SYSDATE, CURRENT_TIMESTAMP, UNIX_TIMESTAMP, FROM_UNIXTIME, SEC_TO_TIME, TIME_TO_SEC
type info                                 BIGINT, BIGINT UNSIGNED, BINARY, BIT, BLOB, BOOL, CHAR, DATE, DATETIME, DECIMAL, DOUBLE, DOUBLE PRECISION, DOUBLE PRECISION UNSIGNED, DOUBLE UNSIGNED, ENUM, FLOAT, INT, INT UNSIGNED, INTEGER, INTEGER UNSIGNED, LONG VARBINARY, LONG VARCHAR, LONGBLOB, LONGTEXT, MEDIUMBLOB, MEDIUMINT, MEDIUMINT UNSIGNED, MEDIUMTEXT, NUMERIC, REAL, SET, SMALLINT, SMALLINT UNSIGNED, TEXT, TIME, TIMESTAMP, TINYBLOB, TINYINT, TINYINT UNSIGNED, TINYTEXT, VARBINARY, VARCHAR, YEAR
updates are detected for TYPE_FORWARD_ONLY result sets  false                         
updates are detected for TYPE_SCROLL_INSENSITIVE result sets  false                         
updates are detected for TYPE_SCROLL_SENSITIVE result sets  false                         
uses local file per table                 false                         
uses local files                          false                         


JDBC Driver Information
-=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=-
connection url                            jdbc:mysql://localhost:57747/books
driver name                               MySQL Connector/J             
driver version                            mysql-connector-j-8.2.0 (Revision: 06a1f724497fd81c6a659131fda822c9e5085b6c)
driver class name                         com.mysql.cj.jdbc.Driver      
is JDBC compliant                         false                         
supported JDBC version                    4.2                           


JDBC Driver Properties
-=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=--=-
allowLoadLocalInfile                                   [driver property]
  Should the driver allow use of "LOAD DATA LOCAL INFILE ..."?[CR]Setting to "true" overrides whatever path is set in 'allowLoadLocalInfileInPath', allowing uploading files from any location.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

allowLoadLocalInfileInPath                             [driver property]
  Enables "LOAD DATA LOCAL INFILE ..." statements, but only allows loading files from the specified path. Files within sub-directories are also allowed, but relative paths or symlinks that fall outside this path are forbidden.
  not required
  value                             null                        

allowMultiQueries                                      [driver property]
  Allow the use of ";" to delimit multiple queries during one statement. This option does not affect the 'addBatch()' and 'executeBatch()' methods, which rely on 'rewriteBatchStatements' instead.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

allowNanAndInf                                         [driver property]
  Should the driver allow NaN or +/- INF values in 'PreparedStatement.setDouble()'?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

allowPublicKeyRetrieval                                [driver property]
  Allows special handshake round-trip to get an RSA public key directly from server.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

allowReplicaDownConnections                            [driver property]
  By default, a replication-aware connection will fail to connect when configured replica hosts are all unavailable at initial connection. Setting this property to "true" allows to establish the initial connection. It won't prevent failures when switching to replicas i.e. by setting the replication connection to read-only state. The property 'readFromSourceWhenNoReplicas' should be used for this purpose.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

allowSourceDownConnections                             [driver property]
  By default, a replication-aware connection will fail to connect when configured source hosts are all unavailable at initial connection. Setting this property to "true" allows to establish the initial connection, by failing over to the replica servers, in read-only state. It won't prevent subsequent failures when switching back to the source hosts i.e. by setting the replication connection to read/write state.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

allowUrlInLocalInfile                                  [driver property]
  Should the driver allow URLs in "LOAD DATA LOCAL INFILE ..." statements?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

alwaysSendSetIsolation                                 [driver property]
  Should the driver always communicate with the database when 'Connection.setTransactionIsolation()' is called? If set to "false", the driver will only communicate with the database when the requested transaction isolation is different than the whichever is newer, the last value that was set via 'Connection.setTransactionIsolation()', or the value that was read from the server when the connection was established. Note that "useLocalSessionState=true" will force the same behavior as "alwaysSendSetIsolation=false", regardless of how 'alwaysSendSetIsolation' is set.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

authenticationFidoCallbackHandler                      [driver property]
  Fully-qualified class name of a class implementing the interface 'com.mysql.cj.callback.MysqlCallbackHandler'. This class will be used by the FIDO authentication plugin to obtain the authenticator data and signature required for the FIDO authentication process. See the documentation of 'com.mysql.cj.callback.FidoAuthenticationCallback' for more details.
  not required
  value                             null                        

authenticationPlugins                                  [driver property]
  Comma-delimited list of classes that implement the interface 'com.mysql.cj.protocol.AuthenticationPlugin'. These plugins will be loaded at connection initialization and can be used together with their sever-side counterparts for authenticating users, unless they are disabled in the connection property 'disabledAuthenticationPlugins'.
  not required
  value                             null                        

authenticationWebAuthnCallbackHandler                  [driver property]
  Fully-qualified class name of a class implementing the interface 'com.mysql.cj.callback.MysqlCallbackHandler'. This class will be used by the WebAuthn authentication plugin to obtain the authenticator data and signature required for the FIDO authentication process. See the documentation of com.mysql.cj.callback.WebAuthnAuthenticationCallback for more details.
  not required
  value                             null                        

autoClosePStmtStreams                                  [driver property]
  Should the driver automatically call the method 'close()' on streams/readers passed as arguments via 'set*()' methods?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

autoGenerateTestcaseScript                             [driver property]
  Should the driver dump the SQL it is executing, including server-side prepared statements to STDERR?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

autoReconnect                                          [driver property]
  Should the driver try to re-establish stale and/or dead connections? If enabled the driver will throw an exception for queries issued on a stale or dead connection, which belong to the current transaction, but will attempt reconnect before the next query issued on the connection in a new transaction. The use of this feature is not recommended, because it has side effects related to session state and data consistency when applications don't handle SQLExceptions properly, and is only designed to be used when you are unable to configure your application to handle SQLExceptions resulting from dead and stale connections properly. Alternatively, as a last option, investigate setting the MySQL server variable 'wait_timeout' to a high value, rather than the default of 8 hours.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

autoReconnectForPools                                  [driver property]
  Use a reconnection strategy appropriate for connection pools?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

autoSlowLog                                            [driver property]
  Instead of using 'slowQueryThreshold*' to determine if a query is slow enough to be logged, maintain statistics that allow the driver to determine queries that are outside the 99th percentile?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

blobsAreStrings                                        [driver property]
  Should the driver always treat BLOBs as Strings - specifically to work around dubious metadata returned by the server for GROUP BY clauses?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

blobSendChunkSize                                      [driver property]
  Chunk size to use when sending BLOB/CLOBs via server-prepared statements. Note that this value cannot exceed the value of 'maxAllowedPacket' and, if that is the case, then this value will be corrected automatically.
  not required
  value                             1048576                     

cacheCallableStmts                                     [driver property]
  Should the driver cache the parsing stage of CallableStatements?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

cacheDefaultTimeZone                                   [driver property]
  Caches client's default time zone. This results in better performance when dealing with time zone conversions in Date and Time data types, however it won't be aware of time zone changes if they happen at runtime.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

cachePrepStmts                                         [driver property]
  Should the driver cache the parsing stage of PreparedStatements of client-side prepared statements, the "check" for suitability of server-side prepared and server-side prepared statements themselves?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

cacheResultSetMetadata                                 [driver property]
  Should the driver cache 'ResultSetMetaData' for statements and prepared statements?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

cacheServerConfiguration                               [driver property]
  Should the driver cache the results of "SHOW VARIABLES" and "SHOW COLLATION" on a per-URL basis?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

callableStmtCacheSize                                  [driver property]
  If 'cacheCallableStmts' is enabled, how many callable statements should be cached?
  not required
  value                             100                         

characterEncoding                                      [driver property]
  Instructs the server to set session system variables 'character_set_client' and 'character_set_connection' to the default character set supported by MySQL for the specified Java character encoding and set 'collation_connection' to the default collation for this character set. If neither this property nor the property 'connectionCollation' is set:[CR]For Connector/J 8.0.25 and earlier, the driver will try to use the server's default character set;[CR]For Connector/J 8.0.26 and later, the driver will use "utf8mb4".
  not required
  value                             null                        

characterSetResults                                    [driver property]
  Instructs the server to return the data encoded with the default character set for the specified Java encoding. If not set or set to "null", the server will send data in its original character set and the driver will decode it according to the result metadata.
  not required
  value                             null                        

clientCertificateKeyStorePassword                      [driver property]
  Password for the client certificates key store.
  not required
  value                             null                        

clientCertificateKeyStoreType                          [driver property]
  Key store type for client certificates.[CR]Null or empty means use the default, which is "JKS". Standard key store types supported by the JVM are "JKS" and "PKCS12", your environment may have more available depending on what security providers are installed and available to the JVM.
  not required
  value                             JKS                         

clientCertificateKeyStoreUrl                           [driver property]
  URL for the client certificate KeyStore.[CR]If not specified, the property 'fallbackToSystemKeyStore' determines if system-wide key store is used.
  not required
  value                             null                        

clientInfoProvider                                     [driver property]
  The name of a class that implements the 'com.mysql.cj.jdbc.ClientInfoProvider' interface in order to support JDBC-4.0's 'Connection.get/setClientInfo()' methods.
  not required
  value                             com.mysql.cj.jdbc.CommentClientInfoProvider

clobberStreamingResults                                [driver property]
  This will cause a streaming result set to be automatically closed, and any outstanding data still streaming from the server to be discarded if another query is executed before all the data has been read from the server.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

clobCharacterEncoding                                  [driver property]
  The character encoding to use for sending and retrieving TEXT, MEDIUMTEXT and LONGTEXT values instead of the configured connection 'characterEncoding'.
  not required
  value                             null                        

compensateOnDuplicateKeyUpdateCounts                   [driver property]
  Should the driver compensate for the update counts of "INSERT ... ON DUPLICATE KEY UPDATE" statements (2 = 1, 0 = 1) when using prepared statements?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

connectionAttributes                                   [driver property]
  A comma-delimited list of user-defined "key:value" pairs, in addition to standard MySQL-defined "key:value" pairs, to be passed to MySQL Server for display as connection attributes in the 'PERFORMANCE_SCHEMA' tables 'session_account_connect_attrs' and 'session_connect_attrs'. Example usage: "connectionAttributes=key1:value1,key2:value2" This functionality is available for use with MySQL Server version 5.6 or later only. Earlier versions of MySQL Server do not support connection attributes, causing this configuration option to be ignored. Setting "connectionAttributes=none" will cause connection attribute processing to be bypassed for situations where Connection creation/initialization speed is critical.
  not required
  value                             null                        

connectionCollation                                    [driver property]
  Instructs the server to set session system variable 'collation_connection' to the specified collation name and set 'character_set_client' and 'character_set_connection' to a corresponding character set. This property overrides the value of 'characterEncoding' with the default character set this collation belongs to, if and only if 'characterEncoding' is not configured or is configured with a character set that is incompatible with the collation. That means 'connectionCollation' may not always correct a mismatch of character sets. For example, if 'connectionCollation' is set to "latin1_swedish_ci", the corresponding character set is "latin1" for MySQL, which maps it to the Java character set "windows-1252"; so if 'characterEncoding' is not set,"windows-1252" is the character set that will be used; but if 'characterEncoding' has been set to, e.g. "ISO-8859-1", that is compatible with "latin1_swedish_ci", so the character encoding  setting is left unchanged; and if client is actually using "windows-1252" (which is similar but different from "ISO-8859-1"), errors would occur for some characters. If neither this property nor the property 'characterEncoding' is set:[CR]For Connector/J 8.0.25 and earlier, the driver will try to use the server's default character set;[CR]For Connector/J 8.0.26 and later, the driver will use utf8mb4's default collation.
  not required
  value                             null                        

connectionLifecycleInterceptors                        [driver property]
  A comma-delimited list of classes that implement 'com.mysql.cj.jdbc.interceptors.ConnectionLifecycleInterceptor' that should be notified of connection lifecycle events (creation, destruction, commit, rollback, setting the current database and changing the autocommit mode) and potentially alter the execution of these commands. 'ConnectionLifecycleInterceptors' are stackable, more than one interceptor may be specified via the configuration property as a comma-delimited list, with the interceptors executed in order from left to right.
  not required
  value                             null                        

connectionTimeZone                                     [driver property]
  Configures the connection time zone which is used by Connector/J if conversion between the JVM default and a target time zone is needed when preserving instant temporal values.[CR]Accepts a geographic time zone name or a time zone offset from Greenwich/UTC, using a syntax 'java.time.ZoneId' is able to parse, or one of the two logical values "LOCAL" and "SERVER". Default is "LOCAL". If set to an explicit time zone then it must be one that either the JVM or both the JVM and MySQL support. If set to "LOCAL" then the driver assumes that the connection time zone is the same as the JVM default time zone. If set to "SERVER" then the driver attempts to detect the session time zone from the values configured on the MySQL server session variables 'time_zone' or 'system_time_zone'. The time zone detection and subsequent mapping to a Java time zone may fail due to several reasons, mostly because of time zone abbreviations being used, in which case an explicit time zone must be set or a different time zone must be configured on the server.[CR]This option itself does not set MySQL server session variable 'time_zone' to the given value. To do that the 'forceConnectionTimeZoneToSession' connection option must be set to "true".[CR]Please note that setting a value to 'connectionTimeZone' in conjunction with "forceConnectionTimeZoneToSession=false" and "preserveInstants=false" has no effect since, in this case, neither this option is used to change the session time zone nor used for time zone conversions of time-based data.[CR]Former connection option 'serverTimezone' is still valid as an alias of this one but may be deprecated in the future.[CR]See also 'forceConnectionTimeZoneToSession' and 'preserveInstants' for more details.
  not required
  value                             null                        

connectTimeout                                         [driver property]
  Timeout for socket connect (in milliseconds), with 0 being no timeout.
  not required
  value                             0                           

continueBatchOnError                                   [driver property]
  Should the driver continue processing batch commands if one statement fails. The JDBC spec allows either way.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

createDatabaseIfNotExist                               [driver property]
  Creates the database given in the URL if it doesn't yet exist. Assumes the configured user has permissions to create databases.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

customCharsetMapping                                   [driver property]
  A comma-delimited list of custom "charset:java encoding" pairs.[CR]In case the MySQL server is configured with custom character sets and "detectCustomCollations=true", Connector/J needs to know which Java character encoding to use for the data represented by these character sets. Example usage: "customCharsetMapping=charset1:UTF-8,charset2:Cp1252".
  not required
  value                             null                        

databaseTerm                                           [driver property]
  MySQL uses the term "schema" as a synonym of the term "database," while Connector/J historically takes the JDBC term "catalog" as synonymous to "database". This property sets for Connector/J which of the JDBC terms "catalog" and "schema" is used in an application to refer to a database. The property takes one of the two values "CATALOG" or "SCHEMA" and uses it to determine (1) which Connection methods can be used to set/get the current database (e.g. 'setCatalog()' or 'setSchema()'?), (2) which arguments can be used within the various 'DatabaseMetaData' methods to filter results (e.g. the catalog or 'schemaPattern' argument of 'getColumns()'?), and (3) which fields in the result sets returned by 'DatabaseMetaData' methods contain the database identification information (i.e., the 'TABLE_CAT' or 'TABLE_SCHEM' field in the result set returned by 'getTables()'?).[CR]If "databaseTerm=CATALOG", 'schemaPattern' for searches are ignored and calls of schema methods (like 'setSchema()' or get 'Schema()') become no-ops, and vice versa.
  not required; choices [CATALOG, SCHEMA]
  value                             CATALOG                     

dbname                                                 [driver property]
  Database name;
  not required
  value                             books                       

defaultAuthenticationPlugin                            [driver property]
  The default authentication plugin client-side protocol name or a fully qualified name of a class that implements the interface 'com.mysql.cj.protocol.AuthenticationPlugin'. The specified authentication plugin must be either one of the built-in authentication plugins or one of the plugins listed in the property 'authenticationPlugins'. Additionally, the default authentication plugin cannot be disabled with the property 'disabledAuthenticationPlugins'. Neither an empty nor unknown plugin name or class can be set for this property.[CR]By default, Connector/J honors the server-side default authentication plugin, which is known after receiving the initial handshake packet, and falls back to this property's default value if that plugin cannot be used. However, when a value is explicitly provided to this property, Connector/J then overrides the server-side default authentication plugin and always tries first the plugin specified with this property.
  not required
  value                             mysql_native_password       

defaultFetchSize                                       [driver property]
  The driver will call 'setFetchSize(n)' with this value on all newly-created statements.
  not required
  value                             0                           

detectCustomCollations                                 [driver property]
  Should the driver detect custom charsets/collations installed on server? If this option set to "true" the driver gets actual charsets/collations from the server each time a connection establishes. This could slow down connection initialization significantly.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

disabledAuthenticationPlugins                          [driver property]
  Comma-delimited list of authentication plugins client-side protocol names or classes implementing the interface 'com.mysql.cj.protocol.AuthenticationPlugin'. The authentication plugins listed will not be used for authenticating users and, if anyone of them is required during the authentication exchange, the connection fails. The default authentication plugin specified in the property 'defaultAuthenticationPlugin' cannot be disabled.
  not required
  value                             null                        

disconnectOnExpiredPasswords                           [driver property]
  If 'disconnectOnExpiredPasswords' is set to "false" and password is expired then server enters sandbox mode and sends 'ERR(08001, ER_MUST_CHANGE_PASSWORD)' for all commands that are not needed to set a new password until a new password is set.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

dnsSrv                                                 [driver property]
  Should the driver use the given host name to lookup for DNS SRV records and use the resulting list of hosts in a multi-host failover connection? Note that a single host name and no port must be provided when this option is enabled.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

dontCheckOnDuplicateKeyUpdateInSQL                     [driver property]
  Stops checking if every INSERT statement contains the "ON DUPLICATE KEY UPDATE" clause. As a side effect, obtaining the statement's generated keys information will return a list where normally it would not. Also be aware that, in this case, the list of generated keys returned may not be accurate. The effect of this property is canceled if set simultaneously with "rewriteBatchedStatements=true".
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

dontTrackOpenResources                                 [driver property]
  The JDBC specification requires the driver to automatically track and close resources, however if your application doesn't do a good job of explicitly calling 'close()' on statements or result sets this can cause memory leakage. Setting this property to "true" relaxes this constraint, and can be more memory efficient for some applications. Also the automatic closing of the statement and current result set in 'Statement.closeOnCompletion()' and 'Statement.getMoreResults([Statement.CLOSE_CURRENT_RESULT | Statement.CLOSE_ALL_RESULTS])', respectively, ceases to happen. This property automatically sets "holdResultsOpenOverStatementClose=true".
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

dumpQueriesOnException                                 [driver property]
  Should the driver dump the contents of the query sent to the server in the message for SQLExceptions?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

elideSetAutoCommits                                    [driver property]
  Should the driver only issue 'set autocommit=n' queries when the server's state doesn't match the requested state by 'Connection.setAutoCommit(boolean)'?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

emptyStringsConvertToZero                              [driver property]
  Should the driver allow conversions from empty string fields to numeric values of "0"?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

emulateLocators                                        [driver property]
  Should the driver emulate 'java.sql.Blob' with locators? With this feature enabled, the driver will delay loading the actual Blob data until the one of the retrieval methods ('getInputStream()', 'getBytes()', and so forth) on the blob data stream has been accessed. For this to work, you must use a column alias with the value of the column to the actual name of the Blob. The feature also has the following restrictions: The SELECT that created the result set must reference only one table, the table must have a primary key; the SELECT must alias the original blob column name, specified as a string, to an alternate name; the SELECT must cover all columns that make up the primary key.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

emulateUnsupportedPstmts                               [driver property]
  Should the driver detect prepared statements that are not supported by the server, and replace them with client-side emulated versions?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

enableEscapeProcessing                                 [driver property]
  Sets the default escape processing behavior for Statement objects. The method 'Statement.setEscapeProcessing()' can be used to specify the escape processing behavior for an individual statement object. Default escape processing behavior in prepared statements must be defined with the property 'processEscapeCodesForPrepStmts'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

enablePacketDebug                                      [driver property]
  When enabled, a ring-buffer of 'packetDebugBufferSize' packets will be kept, and dumped when exceptions are thrown in key areas in the driver's code.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

enableQueryTimeouts                                    [driver property]
  When enabled, query timeouts set via 'Statement.setQueryTimeout()' use a shared 'java.util.Timer' instance for scheduling. Even if the timeout doesn't expire before the query is processed, there will be memory used by the 'TimerTask' for the given timeout which won't be reclaimed until the time the timeout would have expired if it hadn't been cancelled by the driver. High-load environments might want to consider disabling this functionality.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

exceptionInterceptors                                  [driver property]
  Comma-delimited list of classes that implement the interface 'com.mysql.cj.exceptions.ExceptionInterceptor'. These classes will be instantiated one per 'Connection' instance, and all 'SQLException' exceptions thrown by the driver will be allowed to be intercepted by these interceptors, in a chained fashion, with the first class listed as the head of the chain.
  not required
  value                             null                        

explainSlowQueries                                     [driver property]
  If 'logSlowQueries' is enabled, should the driver automatically issue an 'EXPLAIN' on the server and send the results to the configured logger at a WARN level?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

failOverReadOnly                                       [driver property]
  When failing over in 'autoReconnect' mode, should the connection be set to 'read-only'?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

fallbackToSystemKeyStore                               [driver property]
  Whether the absence of setting a value for 'clientCertificateKeyStoreUrl' falls back to using the system-wide key store defined through the system properties 'javax.net.ssl.keyStore*'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

fallbackToSystemTrustStore                             [driver property]
  Whether the absence of setting a value for 'trustCertificateKeyStoreUrl' falls back to using the system-wide default trust store or one defined through the system properties 'javax.net.ssl.trustStore*'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

fipsCompliantJsse                                      [driver property]
  Enables Connector/J to be compatible to JSSE operating in FIPS mode. Should be set to "true" if the JSSE is configured to operate in FIPS mode and Connector/J receives the error "FIPS mode: only SunJSSE TrustManagers may be used" when creating secure connections. If set to "true" then, when establishing secure connections, the driver operates as if the 'sslMode' was set to "VERIFY_CA" or "VERIFY_IDENTITY", i.e., all secure connections require at least server certificate validation, for which a trust store must be configured or fall back to the system-wide trust store must be enabled.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

forceConnectionTimeZoneToSession                       [driver property]
  If enabled, sets the time zone value determined by 'connectionTimeZone' connection property to the current server session 'time_zone' variable. If the time zone value is given as a geographical time zone, then Connector/J sets this value as-is in the server session, in which case the time zone system tables must be populated beforehand (consult the MySQL Server documentation for further details); but, if the value is given as an offset from Greenwich/UTC in any of the supported syntaxes, then the server session time zone is set as a numeric offset from UTC.[CR]With that no intermediate conversion between JVM default time zone and connection time zone is needed to store correct milliseconds value of instant Java objects such as 'java.sql.Timestamp' or 'java.time.OffsetDateTime' when stored in TIMESTAMP columns.[CR]Note that it also affects the result of MySQL functions such as 'NOW()', 'CURTIME()' or 'CURDATE()'.[CR]This option has no effect if used in conjunction with "connectionTimeZone=SERVER" since, in this case, the session is already set with the required time zone.[CR]See also 'connectionTimeZone' and 'preserveInstants' for more details.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

functionsNeverReturnBlobs                              [driver property]
  Should the driver always treat data from functions returning BLOBs as Strings - specifically to work around dubious metadata returned by the server for "GROUP BY" clauses?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

gatherPerfMetrics                                      [driver property]
  Should the driver gather performance metrics, and report them via the configured logger every 'reportMetricsIntervalMillis' milliseconds?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

generateSimpleParameterMetadata                        [driver property]
  Should the driver generate simplified parameter metadata for prepared statements when no metadata is available either because the server couldn't support preparing the statement, or server-side prepared statements are disabled?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

getProceduresReturnsFunctions                          [driver property]
  Pre-JDBC4 'DatabaseMetaData' API has only the 'getProcedures()' and 'getProcedureColumns()' methods, so they return metadata info for both stored procedures and functions. JDBC4 was extended with the 'getFunctions()' and 'getFunctionColumns()' methods and the expected behaviours of previous methods are not well defined. For JDBC4 and higher, default "true" value of the option means that calls of 'DatabaseMetaData.getProcedures()' and 'DatabaseMetaData.getProcedureColumns()' return metadata for both procedures and functions as before, keeping backward compatibility. Setting this property to "false" decouples Connector/J from its pre-JDBC4 behaviours for 'DatabaseMetaData.getProcedures()' and 'DatabaseMetaData.getProcedureColumns()', forcing them to return metadata for procedures only.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

ha.enableJMX                                           [driver property]
  Enables JMX-based management of load-balanced connection groups, including live addition/removal of hosts from load-balancing pool. Enables JMX-based management of replication connection groups, including live replica promotion, addition of new replicas and removal of source or replica hosts from load-balanced source and replica connection pools.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

ha.loadBalanceStrategy                                 [driver property]
  If using a load-balanced connection to connect to SQL servers in a MySQL Cluster configuration (by using the URL prefix "jdbc:mysql:loadbalance://"), which load balancing algorithm should the driver use: (1) "random" - the driver will pick a random host for each request. This tends to work better than round-robin, as the randomness will somewhat account for spreading loads where requests vary in response time, while round-robin can sometimes lead to overloaded nodes if there are variations in response times across the workload. (2) "bestResponseTime" - the driver will route the request to the host that had the best response time for the previous transaction. (3) "serverAffinity" - the driver initially attempts to enforce server affinity while still respecting and benefiting from the fault tolerance aspects of the load-balancing implementation. The server affinity ordered list is provided using the property 'serverAffinityOrder'. If none of the servers listed in the affinity list is responsive, the driver then refers to the "random" strategy to proceed with choosing the next server.
  not required
  value                             random                      

holdResultsOpenOverStatementClose                      [driver property]
  Should the driver close result sets on 'Statement.close()' as required by the JDBC specification?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

host                                                   [driver property]
  Hostname of MySQL Server
  required
  value                             localhost                   

ignoreNonTxTables                                      [driver property]
  Ignore non-transactional table warning for rollback?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

includeInnodbStatusInDeadlockExceptions                [driver property]
  Include the output of "SHOW ENGINE INNODB STATUS" in exception messages when deadlock exceptions are detected?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

includeThreadDumpInDeadlockExceptions                  [driver property]
  Include current Java thread dump in exception messages when deadlock exceptions are detected?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

includeThreadNamesAsStatementComment                   [driver property]
  Include the name of the current thread as a comment visible in "SHOW PROCESSLIST", or in Innodb deadlock dumps, useful in correlation with "includeInnodbStatusInDeadlockExceptions=true" and "includeThreadDumpInDeadlockExceptions=true".
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

initialTimeout                                         [driver property]
  If 'autoReconnect' is enabled, the initial time to wait between re-connect attempts (in seconds, defaults to "2").
  not required
  value                             2                           

interactiveClient                                      [driver property]
  Set the 'CLIENT_INTERACTIVE' flag, which tells MySQL to timeout connections based on 'interactive_timeout' instead of 'wait_timeout'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

jdbcCompliantTruncation                                [driver property]
  Should the driver throw 'java.sql.DataTruncation' exceptions when data is truncated as is required by the JDBC specification? This property has no effect if the server sql-mode includes 'STRICT_TRANS_TABLES'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

KeyManagerFactoryProvider                              [driver property]
  The name of the a Java Security Provider that provides a 'javax.net.ssl.KeyManagerFactory' implementation. If none is specified then the default one is used.
  not required
  value                             null                        

keyStoreProvider                                       [driver property]
  The name of the a Java Security Provider that provides a 'java.security.KeyStore' implementation that supports the key stores types specified with 'clientCertificateKeyStoreType' and 'trustCertificateKeyStoreType'. If none is specified then the default one is used.
  not required
  value                             null                        

largeRowSizeThreshold                                  [driver property]
  What size result set row should the JDBC driver consider large, and thus use a more memory-efficient way of representing the row internally?
  not required
  value                             2048                        

ldapServerHostname                                     [driver property]
  When using MySQL's LDAP pluggable authentication with GSSAPI/Kerberos authentication method, allows setting the LDAP service principal hostname as configured in the Kerberos KDC. If this property is not set, Connector/J takes the system property 'java.security.krb5.kdc' and extracts the hostname (short name) from its value and uses it. If neither is set, the connection fails with an exception.
  not required
  value                             null                        

loadBalanceAutoCommitStatementRegex                    [driver property]
  When load-balancing is enabled for auto-commit statements (via 'loadBalanceAutoCommitStatementThreshold'), the statement counter will only increment when the SQL matches the regular expression. By default, every statement issued matches.
  not required
  value                             null                        

loadBalanceAutoCommitStatementThreshold                [driver property]
  When auto-commit is enabled, the number of statements which should be executed before triggering load-balancing to rebalance. Default value of "0" causes load-balanced connections to only rebalance when exceptions are encountered, or auto-commit is disabled and transactions are explicitly committed or rolled back.
  not required
  value                             0                           

loadBalanceBlocklistTimeout                            [driver property]
  Time in milliseconds between checks of servers which are unavailable, by controlling how long a server lives in the global blocklist.
  not required
  value                             0                           

loadBalanceConnectionGroup                             [driver property]
  Logical group of load-balanced connections within a class loader, used to manage different groups independently. If not specified, live management of load-balanced connections is disabled.
  not required
  value                             null                        

loadBalanceExceptionChecker                            [driver property]
  Fully-qualified class name of custom exception checker. The class must implement 'com.mysql.cj.jdbc.ha.LoadBalanceExceptionChecker' interface, and is used to inspect 'SQLException' exceptions and determine whether they should trigger fail-over to another host in a load-balanced deployment.
  not required
  value                             com.mysql.cj.jdbc.ha.StandardLoadBalanceExceptionChecker

loadBalanceHostRemovalGracePeriod                      [driver property]
  Sets the grace period to wait for a host being removed from a load-balanced connection, to be released when it is currently the active host.
  not required
  value                             15000                       

loadBalancePingTimeout                                 [driver property]
  Time in milliseconds to wait for ping responses from each of load-balanced physical connections when using a load-balanced connection.
  not required
  value                             0                           

loadBalanceSQLExceptionSubclassFailover                [driver property]
  Comma-delimited list of classes/interfaces used by default load-balanced exception checker to determine whether a given 'SQLException' should trigger a failover. The comparison is done using 'Class.isInstance(SQLException)' using the 'SQLException' thrown.
  not required
  value                             null                        

loadBalanceSQLStateFailover                            [driver property]
  Comma-delimited list of 'SQLState' codes used by the default load-balanced exception checker to determine whether a given 'SQLException' should trigger a failover. The 'SQLState' of a given 'SQLException' is evaluated to determine whether it begins with any of the values specified in the comma-delimited list.
  not required
  value                             null                        

loadBalanceValidateConnectionOnSwapServer              [driver property]
  Should the load-balanced connection explicitly check whether the connection is live when swapping to a new physical connection at commit/rollback?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

localSocketAddress                                     [driver property]
  Hostname or IP address given to explicitly configure the interface that the driver will bind the client side of the TCP/IP connection to when connecting.
  not required
  value                             null                        

locatorFetchBufferSize                                 [driver property]
  If 'emulateLocators' is configured to "true", what size buffer should be used when fetching BLOB data for 'getBinaryInputStream()'?
  not required
  value                             1048576                     

logger                                                 [driver property]
  The name of a class that implements 'com.mysql.cj.log.Log' that will be used to log messages to. (default is 'com.mysql.cj.log.StandardLogger', which logs to STDERR).
  not required
  value                             com.mysql.cj.log.StandardLogger

logSlowQueries                                         [driver property]
  Should queries that take longer than 'slowQueryThresholdMillis' or detected by the 'autoSlowLog' monitoring be reported to the registered 'profilerEventHandler'?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

logXaCommands                                          [driver property]
  Should the driver log XA commands sent by 'MysqlXaConnection' to the server, at the DEBUG level of logging?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

maintainTimeStats                                      [driver property]
  Should the driver maintain various internal timers to enable idle time calculations as well as more verbose error messages when the connection to the server fails? Setting this property to false removes at least two calls to 'System.getCurrentTimeMillis()' per query.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

maxAllowedPacket                                       [driver property]
  Maximum allowed packet size to send to server. If not set, the value of system variable 'max_allowed_packet' will be used to initialize this upon connecting. This value will not take effect if set larger than the value of 'max_allowed_packet'. Also, due to an internal dependency with the property 'blobSendChunkSize', this setting has a minimum value of "8203" if 'useServerPrepStmts' is set to "true".
  not required
  value                             65535                       

maxByteArrayAsHex                                      [driver property]
  Maximum size for a byte array parameter in a prepared statement that is converted to a hexadecimal literal when interpolated by 'JdbcPreparedStatement.toString()'. Any byte arrays larger than this value are interpolated generically as "** BYTE ARRAY DATA **".
  not required
  value                             1024                        

maxQuerySizeToLog                                      [driver property]
  Controls the maximum length of the part of a query that will get logged when profiling or tracing.
  not required
  value                             2048                        

maxReconnects                                          [driver property]
  Maximum number of reconnects to attempt if 'autoReconnect' is "true".
  not required
  value                             3                           

maxRows                                                [driver property]
  The maximum number of rows to return. The default "0" means return all rows.
  not required
  value                             -1                          

metadataCacheSize                                      [driver property]
  The number of queries to cache 'ResultSetMetadata' for if 'cacheResultSetMetaData' is set to "true".
  not required
  value                             50                          

netTimeoutForStreamingResults                          [driver property]
  What value should the driver automatically set the server setting 'net_write_timeout' to when the streaming result sets feature is in use? Value has unit of seconds, the value "0" means the driver will not try and adjust this value.
  not required
  value                             600                         

noAccessToProcedureBodies                              [driver property]
  When determining procedure parameter types for 'CallableStatement', and the connected user can't access procedure bodies through "SHOW CREATE PROCEDURE" or SELECT on mysql.proc should the driver instead create basic metadata, with all parameters reported as INOUT VARCHARs, instead of throwing an exception?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

noDatetimeStringSync                                   [driver property]
  Don't ensure that 'ResultSet.getTimestamp().toString().equals(ResultSet.getString())'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

nullDatabaseMeansCurrent                               [driver property]
  In 'DatabaseMetaData' methods that take a 'catalog' or 'schema' parameter, does the value "null" mean to use the current database? See also the property 'databaseTerm'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

ociConfigFile                                          [driver property]
  The location of the OCI configuration file as required by the OCI SDK for Java. Default value is "~/.oci/config" for Unix-like systems and "%HOMEDRIVE%%HOMEPATH%.oci\config" for Windows.
  not required
  value                             null                        

ociConfigProfile                                       [driver property]
  The profile in the OCI configuration file specified in 'ociConfigFile', from where the configuration to use in the 'authentication_oci_client' authentication plugin is to be read.
  not required
  value                             DEFAULT                     

overrideSupportsIntegrityEnhancementFacility           [driver property]
  Should the driver return "true" for 'DatabaseMetaData.supportsIntegrityEnhancementFacility()' even if the database doesn't support it to workaround applications that require this method to return "true" to signal support of foreign keys, even though the SQL specification states that this facility contains much more than just foreign key support (one such application being OpenOffice)?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

packetDebugBufferSize                                  [driver property]
  The maximum number of packets to retain when 'enablePacketDebug' is "true".
  not required
  value                             20                          

padCharsWithSpace                                      [driver property]
  If a result set column has the CHAR type and the value does not fill the amount of characters specified in the DDL for the column, should the driver pad the remaining characters with space (for ANSI compliance)?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

paranoid                                               [driver property]
  Take measures to prevent exposure sensitive information in error messages and clear data structures holding sensitive data when possible?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

password                                               [driver property]
  Password to use for authentication
  required
  value                             null                        

password1                                              [driver property]
  The password to use in the first phase of a Multi-Factor Authentication workflow. It is a synonym of the connection property 'password' and can also be set with user credentials in the connection string.
  not required
  value                             null                        

password2                                              [driver property]
  The password to use in the second phase of a Multi-Factor Authentication workflow.
  not required
  value                             null                        

password3                                              [driver property]
  The password to use in the third phase of a Multi-Factor Authentication workflow.
  not required
  value                             null                        

passwordCharacterEncoding                              [driver property]
  Instructs the server to use the default character set for the specified Java encoding during the authentication phase. If this property is not set, Connector/J falls back to the collation name specified in the property 'connectionCollation' or to the Java encoding specified in the property 'characterEncoding', in that order of priority. The default collation of the character set utf8mb4 is used if none of the properties is set.
  not required
  value                             null                        

pedantic                                               [driver property]
  Follow the JDBC specification to the letter.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

pinGlobalTxToPhysicalConnection                        [driver property]
  When using XA connections, should the driver ensure that operations on a given XID are always routed to the same physical connection? This allows the 'XAConnection' to support "XA START ... JOIN" after "XA END" has been called.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

populateInsertRowWithDefaultValues                     [driver property]
  When using result sets that are 'CONCUR_UPDATABLE', should the driver pre-populate the insert row with default values from the DDL for the table used in the query so those values are immediately available for 'ResultSet' accessors? This functionality requires a call to the database for metadata each time a result set of this type is created. If disabled, the default values will be populated by the an internal call to 'refreshRow()' which pulls back default values and/or values changed by triggers.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

port                                                   [driver property]
  Port number of MySQL Server
  not required
  value                             57747                       

prepStmtCacheSize                                      [driver property]
  If prepared statement caching is enabled, how many prepared statements should be cached?
  not required
  value                             25                          

prepStmtCacheSqlLimit                                  [driver property]
  If prepared statement caching is enabled, what's the largest SQL the driver will cache the parsing for?
  not required
  value                             256                         

preserveInstants                                       [driver property]
  If enabled, Connector/J does its best to preserve the instant point on the time-line for Java instant-based objects such as 'java.sql.Timestamp' or 'java.time.OffsetDateTime' instead of their original visual form. Otherwise, the driver always uses the JVM default time zone for rendering the values it sends to the server and for constructing the Java objects from the fetched data.[CR]MySQL uses implied time zone conversion for TIMESTAMP values: they are converted from the session time zone to UTC for storage, and back from UTC to the session time zone for retrieval. So, to store the correct correct UTC value internally, the driver converts the value from the original time zone to the session time zone before sending to the server. On retrieval, Connector/J converts the received value from the session time zone to the JVM default one.[CR]When storing, the conversion is performed only if the target 'SQLType', either the explicit one or the default one, is TIMESTAMP. When retrieving, the conversion is performed only if the source column has the TIMESTAMP, DATETIME or character type and the target class is an instant-based one, like 'java.sql.Timestamp' or 'java.time.OffsetDateTime'.[CR]Note that this option has no effect if used in conjunction with "connectionTimeZone=LOCAL" since, in this case, the source and target time zones are the same. Though, in this case, it's still possible to store a correct instant value if set together with "forceConnectionTimeZoneToSession=true".[CR]See also 'connectionTimeZone' and 'forceConnectionTimeZoneToSession' for more details.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

processEscapeCodesForPrepStmts                         [driver property]
  Should the driver process escape codes in queries that are prepared? Default escape processing behavior in non-prepared statements must be defined with the property 'enableEscapeProcessing'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

profilerEventHandler                                   [driver property]
  Name of a class that implements the interface 'com.mysql.cj.log.ProfilerEventHandler' that will be used to handle profiling/tracing events.
  not required
  value                             com.mysql.cj.log.LoggingProfilerEventHandler

profileSQL                                             [driver property]
  Trace queries and their execution/fetch times to the configured 'profilerEventHandler'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

propertiesTransform                                    [driver property]
  An implementation of 'com.mysql.cj.conf.ConnectionPropertiesTransform' that the driver will use to modify connection string properties passed to the driver before attempting a connection.
  not required
  value                             null                        

queriesBeforeRetrySource                               [driver property]
  When using multi-host failover, the number of queries to issue before falling back to the primary host when failed over. Whichever condition is met first, 'queriesBeforeRetrySource' or 'secondsBeforeRetrySource' will cause an attempt to be made to reconnect to the primary host. Setting both properties to "0" disables the automatic fall back to the primary host at transaction boundaries.
  not required
  value                             50                          

queryInfoCacheFactory                                  [driver property]
  Name of a class implementing 'com.mysql.cj.CacheAdapterFactory' which will be used to create caches for the parsed representation of prepared statements. Prior to version 8.0.29, this property was named 'parseInfoCacheFactory', which remains as an alias.
  not required
  value                             com.mysql.cj.PerConnectionLRUFactory

queryInterceptors                                      [driver property]
  A comma-delimited list of classes that implement 'com.mysql.cj.interceptors.QueryInterceptor' that intercept query executions and are able influence the results. Query iterceptors are chainable: the results returned by the current interceptor will be passed on to the next in the chain, from left-to-right in the order specified in this property.
  not required
  value                             null                        

queryTimeoutKillsConnection                            [driver property]
  If the timeout given in 'Statement.setQueryTimeout()' expires, should the driver forcibly abort the connection instead of attempting to abort the query?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

readFromSourceWhenNoReplicas                           [driver property]
  Replication-aware connections distribute load by using the source hosts when in read/write state and by using the replica hosts when in read-only state. If, when setting the connection to read-only state, none of the replica hosts are available, an 'SQLException' is thrown back. Setting this property to "true" allows to fail over to the source hosts, while setting the connection state to read-only, when no replica hosts are available at switch instant.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

readOnlyPropagatesToServer                             [driver property]
  Should the driver issue appropriate statements to implicitly set the transaction access mode on server side when 'Connection.setReadOnly()' is called? Setting this property to "true" enables InnoDB read-only potential optimizations but also requires an extra roundtrip to set the right transaction state. Even if this property is set to "false", the driver will do its best effort to prevent the execution of database-state-changing queries.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

reconnectAtTxEnd                                       [driver property]
  If 'autoReconnect' is set to "true", should the driver attempt reconnections at the end of every transaction?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

replicationConnectionGroup                             [driver property]
  Logical group of replication connections within a class loader, used to manage different groups independently. If not specified, live management of replication connections is disabled.
  not required
  value                             null                        

reportMetricsIntervalMillis                            [driver property]
  If 'gatherPerfMetrics' is enabled, how often should they be logged (in milliseconds)?
  not required
  value                             30000                       

requireSSL                                             [driver property]
  DEPRECATED: See 'sslMode' property description for details.[CR]For 8.0.12 and earlier: Require server support of SSL connection if "useSSL=true".
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

resourceId                                             [driver property]
  A globally unique name that identifies the resource that this data source or connection is connected to, used for 'XAResource.isSameRM()' when the driver can't determine this value based on hostnames used in the URL.
  not required
  value                             null                        

resultSetSizeThreshold                                 [driver property]
  If 'useUsageAdvisor' is "true", how many rows should a result set contain before the driver warns that it is suspiciously large?
  not required
  value                             100                         

retriesAllDown                                         [driver property]
  When using load balancing or failover, the number of times the driver should cycle through available hosts, attempting to connect. Between cycles, the driver will pause for 250 ms if no servers are available.
  not required
  value                             120                         

rewriteBatchedStatements                               [driver property]
  Should the driver use multi-queries, regardless of the setting of 'allowMultiQueries', as well as rewriting of prepared statements for INSERT and REPLACE queries into multi-values clause statements when 'executeBatch()' is called?[CR]Notice that this might allow SQL injection when using plain statements and the provided input is not properly sanitized. Also notice that for prepared statements, if the stream length is not specified when using 'PreparedStatement.set*Stream()', the driver would not be able to determine the optimum number of parameters per batch and might return an error saying that the resultant packet is too large.[CR]'Statement.getGeneratedKeys()', for statements that are rewritten only works when the entire batch consists of INSERT or REPLACE statements.[CR]Be aware that when using "rewriteBatchedStatements=true" with "INSERT ... ON DUPLICATE KEY UPDATE" for rewritten statements, the server returns only one value for all affected (or found) rows in the batch, and it is not possible to map it correctly to the initial statements; in this case the driver returns "0" as the result for each batch statement if total count was zero, and 'Statement.SUCCESS_NO_INFO' if total count was above zero.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

rollbackOnPooledClose                                  [driver property]
  Should the driver issue a 'rollback()' when the logical connection in a pool is closed?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

scrollTolerantForwardOnly                              [driver property]
  Should the driver contradict the JDBC API and tolerate and support backward and absolute cursor movement on result sets of type 'ResultSet.TYPE_FORWARD_ONLY'?[CR]Regardless of this setting, cursor-based and row streaming result sets cannot be navigated in the prohibited directions.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

secondsBeforeRetrySource                               [driver property]
  How long, in seconds, should the driver wait when failed over, before attempting to reconnect to the primary host? Whichever condition is met first, 'queriesBeforeRetrySource' or 'secondsBeforeRetrySource' will cause an attempt to be made to reconnect to the source host. Setting both properties to "0" disables the automatic fall back to the primary host at transaction boundaries.
  not required
  value                             30                          

selfDestructOnPingMaxOperations                        [driver property]
  If set to a non-zero value, the driver will report close the connection and report failure when 'com.mysql.cj.jdbc.JdbcConnection.ping()' or 'java.sql.Connection.isValid(int)' is called if the connection's count of commands sent to the server exceeds this value.
  not required
  value                             0                           

selfDestructOnPingSecondsLifetime                      [driver property]
  If set to a non-zero value, the driver will close the connection and report failure when 'com.mysql.cj.jdbc.JdbcConnection.ping()' or 'java.sql.Connection.isValid(int)' is called if the connection's lifetime exceeds this value, specified in milliseconds.
  not required
  value                             0                           

sendFractionalSeconds                                  [driver property]
  If set to "false", the fractional seconds will always be truncated before sending any data to the server. This option applies only to prepared statements, callable statements or updatable result sets.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

sendFractionalSecondsForTime                           [driver property]
  If set to "false", the fractional seconds of 'java.sql.Time' will be ignored as required by JDBC specification. If set to "true", its value is rendered with fractional seconds allowing to store milliseconds into MySQL TIME column. This option applies only to prepared statements, callable statements or updatable result sets. It has no effect if "sendFractionalSeconds=false".
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

serverAffinityOrder                                    [driver property]
  A comma separated list containing the host/port pairs that are to be used in load-balancing "serverAffinity" strategy. Only the sub-set of the hosts enumerated in the main hosts section in this URL will be used and they must be identical in case and type, i.e., can't use an IP address in one place and the corresponding host name in the other.
  not required
  value                             null                        

serverConfigCacheFactory                               [driver property]
  Name of a class implementing 'com.mysql.cj.CacheAdapterFactory', which will be used to create caches for MySQL server configuration values.
  not required
  value                             com.mysql.cj.util.PerVmServerConfigCacheFactory

serverRSAPublicKeyFile                                 [driver property]
  File path to the server RSA public key file for 'sha256_password' authentication. If not specified, the public key will be retrieved from the server.
  not required
  value                             null                        

sessionVariables                                       [driver property]
  A comma or semicolon separated list of "name=value" pairs to be sent as "SET [SESSION] ..." to the server when the driver connects.
  not required
  value                             null                        

slowQueryThresholdMillis                               [driver property]
  If 'logSlowQueries' is enabled, how long, in milliseconds, should a query take before it is logged as slow?
  not required
  value                             2000                        

slowQueryThresholdNanos                                [driver property]
  If 'logSlowQueries' is enabled, 'useNanosForElapsedTime' is set to "true", and this property is set to a non-zero value, the driver will use this threshold, in nanosecond units, to determine if a query was slow.
  not required
  value                             0                           

socketFactory                                          [driver property]
  The name of the class that the driver should use for creating socket connections to the server. This class must implement the interface 'com.mysql.cj.protocol.SocketFactory' and have a public no-args constructor.
  not required
  value                             com.mysql.cj.protocol.StandardSocketFactory

socketTimeout                                          [driver property]
  Timeout, specified in milliseconds, on network socket operations. Value "0" means no timeout.
  not required
  value                             0                           

socksProxyHost                                         [driver property]
  Name or IP address of a SOCKS host to connect through.
  not required
  value                             null                        

socksProxyPort                                         [driver property]
  Port of the SOCKS server.
  not required
  value                             1080                        

socksProxyRemoteDns                                    [driver property]
  When using a SOCKS proxy, whether the DNS lookup for the database host should be performed locally or through the SOCKS proxy.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

sslContextProvider                                     [driver property]
  The name of the a Java Security Provider that provides a 'javax.net.ssl.SSLContext' implementation. If none is specified then the default one is used.
  not required
  value                             null                        

sslMode                                                [driver property]
  By default, network connections are SSL encrypted; this property permits secure connections to be turned off, or a different levels of security to be chosen. The following values are allowed: "DISABLED" - Establish unencrypted connections; "PREFERRED" - Establish encrypted connections if the server enabled them, otherwise fall back to unencrypted connections; "REQUIRED" - Establish secure connections if the server enabled them, fail otherwise; "VERIFY_CA" - Like "REQUIRED" but additionally verify the server TLS certificate against the configured Certificate Authority (CA) certificates; "VERIFY_IDENTITY" - Like "VERIFY_CA", but additionally verify that the server certificate matches the host to which the connection is attempted.[CR] This property replaced the deprecated legacy properties 'useSSL', 'requireSSL', and 'verifyServerCertificate', which are still accepted but translated into a value for 'sslMode' if 'sslMode' is not explicitly set: "useSSL=false" is translated to "sslMode=DISABLED"; {"useSSL=true", "requireSSL=false", "verifyServerCertificate=false"} is translated to "sslMode=PREFERRED"; {"useSSL=true", "requireSSL=true", "verifyServerCertificate=false"} is translated to "sslMode=REQUIRED"; {"useSSL=true", "verifyServerCertificate=true"} is translated to "sslMode=VERIFY_CA". There is no equivalent legacy settings for "sslMode=VERIFY_IDENTITY". Note that, for all server versions, the default setting of 'sslMode' is "PREFERRED", and it is equivalent to the legacy settings of "useSSL=true", "requireSSL=false", and "verifyServerCertificate=false", which are different from their default settings for Connector/J 8.0.12 and earlier in some situations. Applications that continue to use the legacy properties and rely on their old default settings should be reviewed.[CR]The legacy properties are ignored if 'sslMode' is set explicitly. If none of 'sslMode' or 'useSSL' is set explicitly, the default setting of "sslMode=PREFERRED" applies.
  not required; choices [DISABLED, PREFERRED, REQUIRED, VERIFY_CA, VERIFY_IDENTITY]
  value                             PREFERRED                   

strictUpdates                                          [driver property]
  Should the driver do strict checking, i.e. all primary keys selected, of updatable result sets?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

tcpKeepAlive                                           [driver property]
  If connecting using TCP/IP, should the driver set 'SO_KEEPALIVE'?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

tcpNoDelay                                             [driver property]
  If connecting using TCP/IP, should the driver set 'SO_TCP_NODELAY', disabling the Nagle Algorithm?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

tcpRcvBuf                                              [driver property]
  If connecting using TCP/IP, should the driver set 'SO_RCV_BUF' to the given value? The default value of "0", means use the platform default value for this property.
  not required
  value                             0                           

tcpSndBuf                                              [driver property]
  If connecting using TCP/IP, should the driver set 'SO_SND_BUF' to the given value? The default value of "0", means use the platform default value for this property.
  not required
  value                             0                           

tcpTrafficClass                                        [driver property]
  If connecting using TCP/IP, should the driver set traffic class or type-of-service fields? See the documentation for 'java.net.Socket.setTrafficClass()' for more information.
  not required
  value                             0                           

tinyInt1isBit                                          [driver property]
  Since the MySQL server silently converts BIT to TINYINT(1) when creating tables, should the driver treat the datatype TINYINT(1) as the BIT type?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

tlsCiphersuites                                        [driver property]
  When establishing secure connections, overrides the cipher suites enabled for use on the underlying SSL sockets. This may be required when using external JSSE providers or to specify cipher suites compatible with both MySQL server and used JVM. Prior to version 8.0.28, this property was named 'enabledSSLCipherSuites', which remains as an alias.
  not required
  value                             null                        

tlsVersions                                            [driver property]
  List of TLS protocols to allow when establishing secure connections. Overrides the TLS protocols enabled in the underlying SSL sockets. This can be used to restrict connections to specific TLS versions and, by doing that, avoid TLS negotiation fallback. Allowed and default values are "TLSv1.2" and "TLSv1.3". Prior to version 8.0.28, this property was named 'enabledTLSProtocols', which remains as an alias.
  not required
  value                             null                        

traceProtocol                                          [driver property]
  Should the network protocol be logged at the TRACE level?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

trackSessionState                                      [driver property]
  Receive server session state changes on query results. These changes are accessible via 'MysqlConnection.getServerSessionStateController()'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

transformedBitIsBoolean                                [driver property]
  If the driver converts TINYINT(1) to a different type, should it use BOOLEAN instead of BIT?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

treatMysqlDatetimeAsTimestamp                          [driver property]
  Should the driver treat the MySQL DATETIME type as TIMESTAMP in 'ResultSet.getObject()'? Enabling this option changes the default MySQL data type to Java type mapping for DATETIME from 'java.time.LocalDateTime' to 'java.sql.Timestamp'. Given the nature of the DATETIME type and its inability to represent instant values, it is not advisable to enable this option unless the driver is used with a framework or API that expects exclusively objects following the default MySQL data types to Java types mapping, which is the case of, for example, 'javax.sql.rowset.CachedRowSet'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

treatUtilDateAsTimestamp                               [driver property]
  Should the driver treat 'java.util.Date' as a TIMESTAMP in 'PreparedStatement.setObject()'?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

trustCertificateKeyStorePassword                       [driver property]
  Password for the trusted root certificates key store.
  not required
  value                             null                        

trustCertificateKeyStoreType                           [driver property]
  Key store type for trusted root certificates.[CR]Null or empty means use the default, which is "JKS". Standard key store types supported by the JVM are "JKS" and "PKCS12", your environment may have more available depending on what security providers are installed and available to the JVM.
  not required
  value                             JKS                         

trustCertificateKeyStoreUrl                            [driver property]
  URL for the trusted root certificates key store.[CR]If not specified, the property 'fallbackToSystemTrustStore' determines if system-wide trust store is used.
  not required
  value                             null                        

trustManagerFactoryProvider                            [driver property]
  The name of the a Java Security Provider that provides a 'javax.net.ssl.TrustManagerFactory' implementation. If none is specified then the default one is used.
  not required
  value                             null                        

ultraDevHack                                           [driver property]
  Create prepared statements for 'prepareCall()' when required, because UltraDev is broken and issues a 'prepareCall()' for all statements?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useAffectedRows                                        [driver property]
  Don't set the 'CLIENT_FOUND_ROWS' flag when connecting to the server. Note that this is not JDBC-compliant and it will break most applications that rely on "found" rows vs. "affected rows" for DML statements, but does cause correct update counts from "INSERT ... ON DUPLICATE KEY UPDATE" statements to be returned by the server.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useColumnNamesInFindColumn                             [driver property]
  Prior to JDBC-4.0, the JDBC specification had a bug related to what could be given as a column name to result set methods like 'findColumn()', or getters that took a String property. JDBC-4.0 clarified "column name" to mean the label, as given in an "AS" clause and returned by 'ResultSetMetaData.getColumnLabel()', and if no "AS" clause is specified, the column name. Setting this property to "true" will result in a behavior that is congruent to JDBC-3.0 and earlier versions of the JDBC specification, but which could have unexpected results. This property is preferred over 'useOldAliasMetadataBehavior' unless in need of the specific behavior that it provides with respect to 'ResultSetMetadata'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useCompression                                         [driver property]
  Use zlib compression when communicating with the server?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useConfigs                                             [driver property]
  Load the comma-delimited list of configuration properties for specifying combinations of options for particular scenarios. These properties are loaded before parsing the URL or applying user-specified properties. Allowed values are "3-0-Compat", "clusterBase", "coldFusion", "fullDebug", "maxPerformance", "maxPerformance-8-0" and "solarisMaxPerformance", and they correspond to properties files shipped within the Connector/J jar file, under "com/mysql/cj/configurations".
  not required
  value                             null                        

useCursorFetch                                         [driver property]
  Should the driver use cursor-based fetching to retrieve rows? If set to "true" and 'defaultFetchSize' is set to a value higher than zero or 'setFetchSize()' with a value higher than zero is called on a statement, then the cursor-based result set will be used. Please note that 'useServerPrepStmts' is automatically set to "true" in this case because cursor functionality is available only for server-side prepared statements.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useHostsInPrivileges                                   [driver property]
  Add '@hostname' to users in 'DatabaseMetaData.getColumn/TablePrivileges()'.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

useInformationSchema                                   [driver property]
  Should the driver use the INFORMATION_SCHEMA to derive information used by 'DatabaseMetaData'? Default is "true" when connecting to MySQL 8.0.3+, otherwise default is "false".
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useLocalSessionState                                   [driver property]
  Should the driver refer to the internal values of auto-commit and transaction isolation that are set by 'Connection.setAutoCommit()' and 'Connection.setTransactionIsolation()' and transaction state as maintained by the protocol, rather than querying the database or blindly sending commands to the database for 'commit()' or 'rollback()' method calls?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useLocalTransactionState                               [driver property]
  Should the driver use the in-transaction state provided by the MySQL protocol to determine if a 'commit()' or 'rollback()' should actually be sent to the database?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useNanosForElapsedTime                                 [driver property]
  For profiling/debugging functionality that measures elapsed time, should the driver try to use nanoseconds resolution?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useOldAliasMetadataBehavior                            [driver property]
  Should the driver use the legacy behavior for "AS" clauses on columns and tables, and only return aliases ,if any, for 'ResultSetMetaData.getColumnName()' or 'ResultSetMetaData.getTableName()' rather than the original column/table name?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useOnlyServerErrorMessages                             [driver property]
  Don't prepend standard 'SQLState' error messages to error messages returned by the server.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

user                                                   [driver property]
  Username to authenticate as
  required
  value                             null                        

useReadAheadInput                                      [driver property]
  Use optimized non-blocking buffered input stream when reading from the server?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

useServerPrepStmts                                     [driver property]
  Use server-side prepared statements if the server supports them? The server may limit the number of prepared statements with 'max_prepared_stmt_count' or disable them altogether. In case of not being possible to prepare new server-side prepared statements, it depends on the value of 'emulateUnsupportedPstmts' to whether return an error or fall back to client-side emulated prepared statements.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

useSSL                                                 [driver property]
  DEPRECATED: See 'sslMode' property description for details.[CR]For 8.0.12 and earlier: Use SSL when communicating with the server, default is "true" when connecting to MySQL 5.5.45+, 5.6.26+ or 5.7.6+, otherwise default is "false".[CR] For 8.0.13 and later: Default is "true".
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

useStreamLengthsInPrepStmts                            [driver property]
  Honor stream length parameter in 'PreparedStatement/ResultSet.set*Stream()' method calls?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

useUnbufferedInput                                     [driver property]
  Don't use 'BufferedInputStream' for reading data from the server.
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

useUsageAdvisor                                        [driver property]
  Should the driver issue usage warnings advising proper and efficient usage of JDBC and MySQL Connector/J to the 'profilerEventHandler'?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

verifyServerCertificate                                [driver property]
  DEPRECATED: See 'sslMode' property description for details.[CR]For 8.0.12 and earlier: If 'useSSL' is set to "true", should the driver verify the server's certificate? When using this feature, the key store parameters should be specified by the 'clientCertificateKeyStore*' properties, rather than system properties. Default is "false" when connecting to MySQL 5.5.45+, 5.6.26+ or 5.7.6+ and 'useSSL' was not explicitly set to "true". Otherwise default is "true".[CR] For 8.0.13 and later: Default is "false".
  not required; choices [FALSE, NO, TRUE, YES]
  value                             false                       

yearIsDateType                                         [driver property]
  Should the JDBC driver treat the MySQL type YEAR as a 'java.sql.Date', or as a SHORT?
  not required; choices [FALSE, NO, TRUE, YES]
  value                             true                        

zeroDateTimeBehavior                                   [driver property]
  What should happen when the driver encounters DATETIME values that are composed entirely of zeros - used by MySQL to represent invalid dates? Valid values are "EXCEPTION", "ROUND" and "CONVERT_TO_NULL".
  not required; choices [CONVERT_TO_NULL, EXCEPTION, ROUND]
  value                             EXCEPTION                   

