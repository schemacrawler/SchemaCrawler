name: Integration Tests

on:
  workflow_dispatch:
  push:
    branches:
      - '**'

permissions: read-all

jobs:
  build:
    name: Build, run database integration tests, and publish results
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: [8, 17]
    runs-on: ${{ matrix.os }}
    steps:

# SETUP BUILD ENVIRONMENT
    - id: prepare-maven-build
      name: Prepare Maven build
      uses: sualeh/prepare-maven-build@760475f02126626b9077db49728d81849463c9dc # pin@v1.2.1
      with:
        java-version: ${{ matrix.java }}

# BUILD AND TEST
    - id: build-test
      name: Build and run database integration tests
      env:
        TZ: GMT
      shell: bash
      run: |
        # Build
        mvn \
          --no-transfer-progress \
          --batch-mode \
          -Dlightdb \
          -Dheavydb \
          -Ddistrib \
          clean package

# INSTALL GRAPHVIZ, AND RERUN DIAGRAM TESTS
    - id: install-graphviz
      name: Install graphviz
      if:
      shell: bash
      run: |
        # Install Graphviz
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get install graphviz
        elif [ "$RUNNER_OS" == "Windows" ]; then
          choco install graphviz
        elif [ "$RUNNER_OS" == "macOS" ]; then
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew install graphviz
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
        dot -V
    - id: build-test-diagrams
      name: Build and run diagram tests
      shell: bash
      run: |
        # Build
        mvn \
          --no-transfer-progress \
          --batch-mode \
          --projects \
          schemacrawler-diagram,schemacrawler-scripting \
          --also-make \
          package


  build-test-coverage:
    name: Build, run coverage tests, and publish results
    runs-on: ubuntu-latest
    steps:

# SETUP BUILD ENVIRONMENT
    - id: prepare-maven-build
      name: Prepare Maven build
      uses: sualeh/prepare-maven-build@760475f02126626b9077db49728d81849463c9dc # pin@v1.2.1
      with:
        java-version: 8
    - id: install-packages
      name: Install packages
      shell: bash
      run: |
        # Install Graphviz
        sudo apt-get -qq update
        sudo apt-get -q install graphviz
        dot -V

# BUILD AND TEST
    - id: build-test
      name: Build and run database integration tests
      shell: bash
      run: |
        # Build
        mvn \
          --no-transfer-progress \
          --batch-mode \
          -Dtestcoverage \
          clean install \
          org.jacoco:jacoco-maven-plugin:0.8.7:report-aggregate

# GET TEST RESULTS
    - id: publish-test-results
      name: Upload results and coverage
      if: contains(github.ref, 'master')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: |
        # Upload results and coverage
        bash <(curl -s https://codecov.io/bash) -t 4456b669-238d-485f-a64a-250449710514
    - id: upload-coverage-test-results
      name: Upload coverage test results
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # @v3
      with:
        name: coverage-test-results
        path: ./schemacrawler/target/site/jacoco-aggregate

  build-test-docker:
    name: Build, run coverage tests, and build Docker image
    runs-on: ubuntu-latest
    steps:

# SETUP BUILD ENVIRONMENT
    - id: prepare-maven-build
      name: Prepare Maven build
      uses: sualeh/prepare-maven-build@760475f02126626b9077db49728d81849463c9dc # pin@v1.2.1
      with:
        java-version: 8
    - id: install-packages
      name: Install packages
      shell: bash
      run: |
        # Install Graphviz
        sudo apt-get -qq update
        sudo apt-get -q install graphviz
        dot -V

# BUILD AND TEST
    - id: build-test
      name: Build and run tests, and build Docker image
      shell: bash
      run: |
        # Build
        mvn \
          --no-transfer-progress \
          --batch-mode \
          -Ddistrib \
          -Ddocker.skip=false \
          clean package

# CHECK WEBSITE LINKS
    - id: check-links
      name: Check website links
      uses: lycheeverse/lychee-action@f1da3291e1d03cbe11a413ae9f16b62fec99e6b6 # @v1.4.1
      with:
        args: --verbose --accept 200,999 --no-progress ./schemacrawler-website/target/_website/**/*
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - id: upload-link-check-report
      name: Upload website link check report
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # @v3
      with:
        path: ./lychee/out.md
        name: website-link-check-report.md
        retention-days: 15
