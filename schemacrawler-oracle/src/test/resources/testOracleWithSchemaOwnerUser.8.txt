

Tables
========================================================================



BOOKS.AUTHORS                                                    [table]
------------------------------------------------------------------------
Contact details for book authors
  ID                                NUMBER(38, 0) NOT NULL      
  FIRSTNAME                         VARCHAR2(20) NOT NULL       
  LASTNAME                          VARCHAR2(20) NOT NULL       
  ADDRESS1                          VARCHAR2(255)               
  ADDRESS2                          VARCHAR2(255)               
  CITY                              VARCHAR2(50)                
  STATE                             CHAR(2)                     
  POSTALCODE                        VARCHAR2(10)                
  COUNTRY                           VARCHAR2(50)                
                                    default 'USA'               
  "SYS_NC00010$"                    RAW                         
                                    default "STATE"             
                                    generated                   
                                    hidden                      

Primary Key

PK_AUTHORS                                                 [primary key]
  ID                                                            

Foreign Keys

Z_FK_AUTHOR                            [foreign key, on delete restrict]
  ID <--(0..many) BOOKS.BOOKAUTHORS.AUTHORID                              

Indexes

PK_AUTHORS                                                [unique index]
  ID                                ascending                   
CREATE UNIQUE INDEX "PK_AUTHORS" ON "AUTHORS" ("ID") 
  ;

IDX_B_AUTHORS                                         [non-unique index]
  LASTNAME                          ascending                   
  FIRSTNAME                         ascending                   
CREATE INDEX "IDX_B_AUTHORS" ON "AUTHORS" ("LASTNAME", "FIRSTNAME") 
  ;

IDX_A_AUTHORS                                         [non-unique index]
  CITY                              ascending                   
  "SYS_NC00010$"                    descending                  
  POSTALCODE                        ascending                   
  COUNTRY                           ascending                   
CREATE INDEX "IDX_A_AUTHORS" ON "AUTHORS" ("CITY", "STATE" DESC, "POSTALCODE", "COUNTRY") 
  ;

Triggers

TRG_AUTHORS                                                    [trigger]
  after insert or delete, per row
                                                      [action statement]
BEGIN
  UPDATE Publishers 
    SET Publisher = 'Jacob' 
    WHERE Publisher = 'John';
END;

Table Constraints

CHECK_UPPERCASE_STATE                                 [check constraint]
  STATE                                                         
ALTER TABLE "AUTHORS" ADD CONSTRAINT "CHECK_UPPERCASE_STATE" CHECK (State=UPPER(State)) ENABLE;

SYS_C008647                                           [check constraint]
  ID                                                            
ALTER TABLE "AUTHORS" MODIFY ("ID" NOT NULL ENABLE);

SYS_C008648                                           [check constraint]
  FIRSTNAME                                                     
ALTER TABLE "AUTHORS" MODIFY ("FIRSTNAME" NOT NULL ENABLE);

SYS_C008649                                           [check constraint]
  LASTNAME                                                      
ALTER TABLE "AUTHORS" MODIFY ("LASTNAME" NOT NULL ENABLE);

Privileges and Grants

SELECT                                                       [privilege]
  BOOKS --> SELUSER                                             

Definition
                                                            [definition]
CREATE TABLE "AUTHORS" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"FIRSTNAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"LASTNAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"ADDRESS1" VARCHAR2(255 BYTE), 
	"ADDRESS2" VARCHAR2(255 BYTE), 
	"CITY" VARCHAR2(50 BYTE), 
	"STATE" CHAR(2 BYTE), 
	"POSTALCODE" VARCHAR2(10 BYTE), 
	"COUNTRY" VARCHAR2(50 BYTE) DEFAULT 'USA', 
	 CONSTRAINT "CHECK_UPPERCASE_STATE" CHECK (State=UPPER(State)) ENABLE, 
	 CONSTRAINT "PK_AUTHORS" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) ;



BOOKS.AUTHORSCOUNTRIES                               [materialized view]
------------------------------------------------------------------------
snapshot table for snapshot BOOKS.AUTHORSCOUNTRIES
  ID                                NUMBER(38, 0) NOT NULL      
  FIRSTNAME                         VARCHAR2(20) NOT NULL       
  LASTNAME                          VARCHAR2(20) NOT NULL       
  COUNTRY                           VARCHAR2(50)                

Primary Key

"SYS_C_SNAP$_1PK_AUTHORS"                                  [primary key]
  ID                                                            

Indexes

"SYS_C_SNAP$_1PK_AUTHORS"                                 [unique index]
  ID                                ascending                   
CREATE UNIQUE INDEX "SYS_C_SNAP$_1PK_AUTHORS" ON "AUTHORSCOUNTRIES" ("ID") 
  ;

Table Constraints

SYS_C008674                                           [check constraint]
  ID                                                            
ALTER TABLE "AUTHORSCOUNTRIES" MODIFY ("ID" NOT NULL ENABLE);

SYS_C008675                                           [check constraint]
  FIRSTNAME                                                     
ALTER TABLE "AUTHORSCOUNTRIES" MODIFY ("FIRSTNAME" NOT NULL ENABLE);

SYS_C008676                                           [check constraint]
  LASTNAME                                                      
ALTER TABLE "AUTHORSCOUNTRIES" MODIFY ("LASTNAME" NOT NULL ENABLE);

Definition
                                                            [definition]
SELECT Id, FirstName, LastName, Country FROM Authors



BOOKS.AUTHORSLIST                                                 [view]
------------------------------------------------------------------------
  ID                                NUMBER(38, 0) NOT NULL      
  FIRSTNAME                         VARCHAR2(20) NOT NULL       
  LASTNAME                          VARCHAR2(20) NOT NULL       

Definition
                                                            [definition]
SELECT Id, FirstName, LastName FROM Authors

Table Usage

BOOKS.AUTHORS                                                    [table]



BOOKS.BOOKAUTHORS                                                [table]
------------------------------------------------------------------------
Relationship between books and their authors, 
along with the latest updated information
  BOOKID                            NUMBER(38, 0) NOT NULL      
  AUTHORID                          NUMBER(38, 0) NOT NULL      
  SOMEDATA                          VARCHAR2(30)                

Foreign Keys

Z_FK_AUTHOR                            [foreign key, on delete restrict]
  AUTHORID (0..many)--> BOOKS.AUTHORS.ID                              

SYS_C008660                            [foreign key, on delete restrict]
  BOOKID (0..many)--> BOOKS.BOOKS.ID                              

Indexes

UIDX_BOOKAUTHORS                                          [unique index]
  BOOKID                            ascending                   
  AUTHORID                          ascending                   
CREATE UNIQUE INDEX "UIDX_BOOKAUTHORS" ON "BOOKAUTHORS" ("BOOKID", "AUTHORID") 
  ;

Table Constraints

SYS_C008658                                           [check constraint]
  BOOKID                                                        
ALTER TABLE "BOOKAUTHORS" MODIFY ("BOOKID" NOT NULL ENABLE);

SYS_C008659                                           [check constraint]
  AUTHORID                                                      
ALTER TABLE "BOOKAUTHORS" MODIFY ("AUTHORID" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "BOOKAUTHORS" 
   (	"BOOKID" NUMBER(*,0) NOT NULL ENABLE, 
	"AUTHORID" NUMBER(*,0) NOT NULL ENABLE, 
	"SOMEDATA" VARCHAR2(30 BYTE), 
	 FOREIGN KEY ("BOOKID")
	  REFERENCES "BOOKS" ("ID") ENABLE, 
	 CONSTRAINT "Z_FK_AUTHOR" FOREIGN KEY ("AUTHORID")
	  REFERENCES "AUTHORS" ("ID") ENABLE
   ) ;



BOOKS.BOOKS                                                      [table]
------------------------------------------------------------------------
Details for published books
  ID                                NUMBER(38, 0) NOT NULL      
                                    Unique (internal) id for book
  TITLE                             VARCHAR2(255) NOT NULL      
                                    Book title                  
  DESCRIPTION                       VARCHAR2(255)               
                                    Book description
(Usually the blurb from the book jacket or promotional materials)
  PUBLISHERID                       NUMBER(38, 0) NOT NULL      
                                    Foreign key to the book publisher
  PUBLICATIONDATE                   DATE                        
                                    Book publication date       
  PRICE                             FLOAT(126, 0)               
                                    Current price for the book  
  PREVIOUSEDITIONID                 NUMBER(38, 0)               

Primary Key

PK_BOOKS                                                   [primary key]
  ID                                                            

Foreign Keys

SYS_C008660                            [foreign key, on delete restrict]
  ID <--(0..many) BOOKS.BOOKAUTHORS.BOOKID                              

FK_PREVIOUSEDITION                     [foreign key, on delete restrict]
  ID <--(0..1) PREVIOUSEDITIONID                                

Indexes

PK_BOOKS                                                  [unique index]
  ID                                ascending                   
CREATE UNIQUE INDEX "PK_BOOKS" ON "BOOKS" ("ID") 
  ;

U_PREVIOUSEDITION                                         [unique index]
  PREVIOUSEDITIONID                 ascending                   
CREATE UNIQUE INDEX "U_PREVIOUSEDITION" ON "BOOKS" ("PREVIOUSEDITIONID") 
  ;

Table Constraints

U_PREVIOUSEDITION                                    [unique constraint]
  PREVIOUSEDITIONID                                             
ALTER TABLE "BOOKS" ADD CONSTRAINT "U_PREVIOUSEDITION" UNIQUE ("PREVIOUSEDITIONID")
  USING INDEX  ENABLE;

SYS_C008652                                           [check constraint]
  ID                                                            
ALTER TABLE "BOOKS" MODIFY ("ID" NOT NULL ENABLE);

SYS_C008653                                           [check constraint]
  TITLE                                                         
ALTER TABLE "BOOKS" MODIFY ("TITLE" NOT NULL ENABLE);

SYS_C008654                                           [check constraint]
  PUBLISHERID                                                   
ALTER TABLE "BOOKS" MODIFY ("PUBLISHERID" NOT NULL ENABLE);

Privileges and Grants

INHERIT PRIVILEGES                                           [privilege]
  BOOKS --> PUBLIC                                              

Definition
                                                            [definition]
CREATE TABLE "BOOKS" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"TITLE" VARCHAR2(255 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"PUBLISHERID" NUMBER(*,0) NOT NULL ENABLE, 
	"PUBLICATIONDATE" DATE, 
	"PRICE" FLOAT(126), 
	"PREVIOUSEDITIONID" NUMBER(*,0), 
	 CONSTRAINT "PK_BOOKS" PRIMARY KEY ("ID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "U_PREVIOUSEDITION" UNIQUE ("PREVIOUSEDITIONID")
  USING INDEX  ENABLE, 
	 CONSTRAINT "FK_PREVIOUSEDITION" FOREIGN KEY ("PREVIOUSEDITIONID")
	  REFERENCES "BOOKS" ("ID") ENABLE
   ) ;



BOOKS."Celebrities"                                              [table]
------------------------------------------------------------------------
  "Id"                              NUMBER(38, 0) NOT NULL      
  NAME                              VARCHAR2(20)                

Primary Key

"PK_Celebrities"                                           [primary key]
  "Id"                                                          

Foreign Keys

SYS_C008668                            [foreign key, on delete restrict]
  "Id" <--(0..1) BOOKS."Celebrity Updates"."Celebrity Id"                              

Indexes

"PK_Celebrities"                                          [unique index]
  "Id"                              ascending                   
CREATE UNIQUE INDEX "PK_Celebrities" ON "Celebrities" ("Id") 
  ;

Table Constraints

SYS_C008664                                           [check constraint]
  "Id"                                                          
ALTER TABLE "Celebrities" MODIFY ("Id" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "Celebrities" 
   (	"Id" NUMBER(*,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(20 BYTE), 
	 CONSTRAINT "PK_Celebrities" PRIMARY KEY ("Id")
  USING INDEX  ENABLE
   ) ;



BOOKS."Celebrity Updates"                                        [table]
------------------------------------------------------------------------
  "Celebrity Id"                    NUMBER(38, 0) NOT NULL      
  "UPDATE"                          VARCHAR2(20)                

Primary Key

"PK Celebrity Updates"                                     [primary key]
  "Celebrity Id"                                                

Foreign Keys

SYS_C008668                            [foreign key, on delete restrict]
  "Celebrity Id" (0..1)--> BOOKS."Celebrities"."Id"                              

Indexes

"PK Celebrity Updates"                                    [unique index]
  "Celebrity Id"                    ascending                   
CREATE UNIQUE INDEX "PK Celebrity Updates" ON "Celebrity Updates" ("Celebrity Id") 
  ;

Table Constraints

SYS_C008666                                           [check constraint]
  "Celebrity Id"                                                
ALTER TABLE "Celebrity Updates" MODIFY ("Celebrity Id" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "Celebrity Updates" 
   (	"Celebrity Id" NUMBER(*,0) NOT NULL ENABLE, 
	"UPDATE" VARCHAR2(20 BYTE), 
	 CONSTRAINT "PK Celebrity Updates" PRIMARY KEY ("Celebrity Id")
  USING INDEX  ENABLE, 
	 FOREIGN KEY ("Celebrity Id")
	  REFERENCES "Celebrities" ("Id") ENABLE
   ) ;



BOOKS.COUPONS                                                    [table]
------------------------------------------------------------------------
  ID                                NUMBER(38, 0) NOT NULL      
  DATA                              CLOB                        
  COUPONS                           NUMBER(38, 0)               
  BOOKS                             VARCHAR2(20)                

Primary Key

PK_COUPONS                                                 [primary key]
  ID                                                            

Indexes

PK_COUPONS                                                [unique index]
  ID                                ascending                   
CREATE UNIQUE INDEX "PK_COUPONS" ON "COUPONS" ("ID") 
  ;

Table Constraints

SYS_C008645                                           [check constraint]
  ID                                                            
ALTER TABLE "COUPONS" MODIFY ("ID" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "COUPONS" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"DATA" CLOB, 
	"COUPONS" NUMBER(*,0), 
	"BOOKS" VARCHAR2(20 BYTE), 
	 CONSTRAINT "PK_COUPONS" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) ;



BOOKS.JSON_BOOKS                                                  [view]
------------------------------------------------------------------------
  DATA                              JSON                        
  ETAG                              RAW                         
                                    hidden                      
  RESID                             RAW                         
                                    hidden                      

Definition
                                                            [definition]
SELECT JSON
{
  '_id': BOOKS.ID,
  'title': BOOKS.TITLE,
  'description': BOOKS.DESCRIPTION,
  'publication-date': BOOKS.PUBLICATIONDATE,
  'authors':
  (SELECT JSON_ARRAYAGG(JSON
  {
    '_book_id': BOOKAUTHORS.BOOKID,
    '_author_id': BOOKAUTHORS.AUTHORID,
    'author':
    (SELECT JSON
    {
      '_id': AUTHORS.ID,
      'first-name': AUTHORS.FIRSTNAME,
      'last-name': AUTHORS.LASTNAME
    }
    FROM
      BOOKS.AUTHORS
    WHERE
      BOOKAUTHORS.AUTHORID = AUTHORS.ID
    )
  })
  FROM
    BOOKS.BOOKAUTHORS
  WHERE
    BOOKAUTHORS.BOOKID = BOOKS.ID
  )
}
FROM
  BOOKS.BOOKS

Table Usage

BOOKS.AUTHORS                                                    [table]
BOOKS.BOOKS                                                      [table]
BOOKS.BOOKAUTHORS                                                [table]



BOOKS.PUBLISHERS                                                 [table]
------------------------------------------------------------------------
List of book publishers
  ID                                NUMBER(38, 0) NOT NULL      
                                    default "BOOKS"."ISEQ$$_71700".nextval
                                    auto-incremented            
                                    Unique (internal) id for book publisher
  PUBLISHER                         VARCHAR2(255)               
                                    Name of book publisher      

Primary Key

SYS_C008663                                                [primary key]
  ID                                                            

Foreign Keys

FK_ΒΙΒΛΊΑ_PUBLISHERS                   [foreign key, on delete restrict]
  ID <--(0..many) BOOKS.ΒΙΒΛΊΑ.ΕΚΔΌΤΗΣ                              

Indexes

SYS_C008663                                               [unique index]
  ID                                ascending                   
CREATE UNIQUE INDEX "SYS_C008663" ON "PUBLISHERS" ("ID") 
  ;

Table Constraints

SYS_C008662                                           [check constraint]
  ID                                                            
ALTER TABLE "PUBLISHERS" MODIFY ("ID" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "PUBLISHERS" 
   (	"ID" NUMBER(*,0) GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"PUBLISHER" VARCHAR2(255 BYTE), 
	 PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) ;



BOOKS.TEMP_AUTHOR_LIST                                           [table]
------------------------------------------------------------------------
  ID                                NUMBER(38, 0) NOT NULL      
  FIRSTNAME                         VARCHAR2(20) NOT NULL       
  LASTNAME                          VARCHAR2(20) NOT NULL       

Primary Key

PK_TMP_AUTHORS                                             [primary key]
  ID                                                            

Indexes

PK_TMP_AUTHORS                                            [unique index]
  ID                                ascending                   
CREATE UNIQUE INDEX "PK_TMP_AUTHORS" ON "TEMP_AUTHOR_LIST" ("ID") ;

Table Constraints

SYS_C008678                                           [check constraint]
  ID                                                            
ALTER TABLE "TEMP_AUTHOR_LIST" MODIFY ("ID" NOT NULL ENABLE);

SYS_C008679                                           [check constraint]
  FIRSTNAME                                                     
ALTER TABLE "TEMP_AUTHOR_LIST" MODIFY ("FIRSTNAME" NOT NULL ENABLE);

SYS_C008680                                           [check constraint]
  LASTNAME                                                      
ALTER TABLE "TEMP_AUTHOR_LIST" MODIFY ("LASTNAME" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE GLOBAL TEMPORARY TABLE "TEMP_AUTHOR_LIST" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"FIRSTNAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"LASTNAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "PK_TMP_AUTHORS" PRIMARY KEY ("ID") ENABLE
   ) ON COMMIT DELETE ROWS ;



BOOKS.X_CUSTOMERS                                                [table]
------------------------------------------------------------------------
  CUSTOMERID                        NUMBER(38, 0) NOT NULL      
  CUSTOMER_NAME                     VARCHAR2(80)                
  SOCIAL_SECURITY_NUMBER            CHAR(9)                     
                                    hidden                      

Table Constraints

SYS_C008683                                           [check constraint]
  CUSTOMERID                                                    
ALTER TABLE "X_CUSTOMERS" MODIFY ("CUSTOMERID" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "X_CUSTOMERS" 
   (	"CUSTOMERID" NUMBER(*,0) NOT NULL ENABLE, 
	"CUSTOMER_NAME" VARCHAR2(80 BYTE), 
	"SOCIAL_SECURITY_NUMBER" CHAR(9 BYTE) INVISIBLE
   ) ;



BOOKS.X_EMPLOYEES                                                [table]
------------------------------------------------------------------------
  EMPLOYEEID                        NUMBER(38, 0) NOT NULL      
  EMPLOYEE_NAME                     VARCHAR2(30)                
  START_DATE                        DATE                        
  END_DATE                          DATE                        
  ANNUAL_SALARY                     NUMBER(38, 0)               
  HOURLY_RATE                       NUMBER                      
                                    default "ANNUAL_SALARY"/2080
                                    generated                   
  ACTIVE                            CHAR(1)                     
                                    default CASE  WHEN "END_DATE" IS NULL THEN 'Y' ELSE 'N' END
                                    generated                   

Table Constraints

SYS_C008682                                           [check constraint]
  EMPLOYEEID                                                    
ALTER TABLE "X_EMPLOYEES" MODIFY ("EMPLOYEEID" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "X_EMPLOYEES" 
   (	"EMPLOYEEID" NUMBER(*,0) NOT NULL ENABLE, 
	"EMPLOYEE_NAME" VARCHAR2(30 BYTE), 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"ANNUAL_SALARY" NUMBER(*,0), 
	"HOURLY_RATE" NUMBER GENERATED ALWAYS AS ("ANNUAL_SALARY"/2080) VIRTUAL , 
	"ACTIVE" CHAR(1 BYTE) GENERATED ALWAYS AS (CASE  WHEN "END_DATE" IS NULL THEN 'Y' ELSE 'N' END) VIRTUAL 
   ) ;



BOOKS.ΒΙΒΛΊΑ                                                     [table]
------------------------------------------------------------------------
  ΜΟΝΑΔΙΚΌΣ                         NUMBER(38, 0) NOT NULL      
  ΤΊΤΛΟΣ                            VARCHAR2(255) NOT NULL      
  ΠΕΡΙΓΡΑΦΉ                         VARCHAR2(255)               
  ΕΚΔΌΤΗΣ                           NUMBER(38, 0) NOT NULL      

Primary Key

PK_ΒΙΒΛΊΑ                                                  [primary key]
  ΜΟΝΑΔΙΚΌΣ                                                     

Foreign Keys

FK_ΒΙΒΛΊΑ_PUBLISHERS                   [foreign key, on delete restrict]
  ΕΚΔΌΤΗΣ (0..many)--> BOOKS.PUBLISHERS.ID                              

Indexes

PK_ΒΙΒΛΊΑ                                                 [unique index]
  ΜΟΝΑΔΙΚΌΣ                         ascending                   
CREATE UNIQUE INDEX "PK_ΒΙΒΛΊΑ" ON "ΒΙΒΛΊΑ" ("ΜΟΝΑΔΙΚΌΣ") 
  ;

Table Constraints

SYS_C008669                                           [check constraint]
  ΜΟΝΑΔΙΚΌΣ                                                     
ALTER TABLE "ΒΙΒΛΊΑ" MODIFY ("ΜΟΝΑΔΙΚΌΣ" NOT NULL ENABLE);

SYS_C008670                                           [check constraint]
  ΤΊΤΛΟΣ                                                        
ALTER TABLE "ΒΙΒΛΊΑ" MODIFY ("ΤΊΤΛΟΣ" NOT NULL ENABLE);

SYS_C008671                                           [check constraint]
  ΕΚΔΌΤΗΣ                                                       
ALTER TABLE "ΒΙΒΛΊΑ" MODIFY ("ΕΚΔΌΤΗΣ" NOT NULL ENABLE);

Definition
                                                            [definition]
CREATE TABLE "ΒΙΒΛΊΑ" 
   (	"ΜΟΝΑΔΙΚΌΣ" NUMBER(*,0) NOT NULL ENABLE, 
	"ΤΊΤΛΟΣ" VARCHAR2(255 BYTE) NOT NULL ENABLE, 
	"ΠΕΡΙΓΡΑΦΉ" VARCHAR2(255 BYTE), 
	"ΕΚΔΌΤΗΣ" NUMBER(*,0) NOT NULL ENABLE, 
	 CONSTRAINT "PK_ΒΙΒΛΊΑ" PRIMARY KEY ("ΜΟΝΑΔΙΚΌΣ")
  USING INDEX  ENABLE, 
	 CONSTRAINT "FK_ΒΙΒΛΊΑ_PUBLISHERS" FOREIGN KEY ("ΕΚΔΌΤΗΣ")
	  REFERENCES "PUBLISHERS" ("ID") ENABLE
   ) ;



Routines
========================================================================



BOOKS.GETBOOKSCOUNT                               [procedure, no result]
------------------------------------------------------------------------
  BOOKSCOUNT                        NUMBER(22, 0), out          

References

BOOKS.BOOKS                                                      [table]

Definition
                                                            [definition]
CREATE OR REPLACE EDITIONABLE PROCEDURE "GETBOOKSCOUNT" (BooksCount OUT NUMBER) 
IS
BEGIN
    SELECT COUNT(*) INTO BooksCount
    FROM BOOKS.BOOKS;
END;
/



BOOKS.NEW_PUBLISHER                               [procedure, no result]
------------------------------------------------------------------------
  NEWPUBLISHER                      VARCHAR2, in                
  PUBLISHER                         VARCHAR2, out               

Definition
                                                            [definition]
CREATE OR REPLACE EDITIONABLE PROCEDURE "NEW_PUBLISHER" (NewPublisher IN VARCHAR2, Publisher OUT VARCHAR2)
IS
BEGIN
  Publisher := NewPublisher;
END;
/



BOOKS.CUSTOMADD                      [function, does not return a table]
------------------------------------------------------------------------
  ONE                               NUMBER(22, 38), in          
  TWO                               NUMBER(22, 38), in          

Definition
                                                            [definition]
CREATE OR REPLACE EDITIONABLE FUNCTION "CUSTOMADD" (One IN INTEGER, Two IN INTEGER) 
RETURN INTEGER
AS 
BEGIN
  RETURN One + Two;
END;
/



Sequences
========================================================================



BOOKS."ISEQ$$_71700"                                          [sequence]
------------------------------------------------------------------------
  increment                         1                           
  start value                                                   
  minimum value                     1                           
  maximum value                     9999999999999999999999999999
  cycle                             false                       



BOOKS.PUBLISHER_ID_SEQ                                        [sequence]
------------------------------------------------------------------------
  increment                         1                           
  start value                                                   
  minimum value                     1                           
  maximum value                     9999999999999999999999999999
  cycle                             false                       



Synonyms
========================================================================



BOOKS.OTHER_TABLE                                              [synonym]
------------------------------------------------------------------------
  OTHER_TABLE --> BOOKS.FAKE_TABLE                              



BOOKS.PUBLICATIONS                                             [synonym]
------------------------------------------------------------------------
  PUBLICATIONS --> BOOKS.BOOKS                                  

